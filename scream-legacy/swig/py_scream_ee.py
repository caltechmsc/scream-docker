# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _py_scream_ee
else:
    import _py_scream_ee

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _py_scream_ee.delete_SwigPyIterator

    def value(self):
        return _py_scream_ee.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _py_scream_ee.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _py_scream_ee.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _py_scream_ee.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _py_scream_ee.SwigPyIterator_equal(self, x)

    def copy(self):
        return _py_scream_ee.SwigPyIterator_copy(self)

    def next(self):
        return _py_scream_ee.SwigPyIterator_next(self)

    def __next__(self):
        return _py_scream_ee.SwigPyIterator___next__(self)

    def previous(self):
        return _py_scream_ee.SwigPyIterator_previous(self)

    def advance(self, n):
        return _py_scream_ee.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _py_scream_ee.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _py_scream_ee.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _py_scream_ee.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _py_scream_ee.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _py_scream_ee.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _py_scream_ee.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _py_scream_ee:
_py_scream_ee.SwigPyIterator_swigregister(SwigPyIterator)
class ScreamModel(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, arg2):
        _py_scream_ee.ScreamModel_swiginit(self, _py_scream_ee.new_ScreamModel(arg2))
    __swig_destroy__ = _py_scream_ee.delete_ScreamModel
    scream_parameters = property(_py_scream_ee.ScreamModel_scream_parameters_get, _py_scream_ee.ScreamModel_scream_parameters_set)
    HANDLER = property(_py_scream_ee.ScreamModel_HANDLER_get, _py_scream_ee.ScreamModel_HANDLER_set)
    ptn = property(_py_scream_ee.ScreamModel_ptn_get, _py_scream_ee.ScreamModel_ptn_set)
    scream_EE = property(_py_scream_ee.ScreamModel_scream_EE_get, _py_scream_ee.ScreamModel_scream_EE_set)

    def new_ScreamEE(self):
        return _py_scream_ee.ScreamModel_new_ScreamEE(self)

    def new_Rotlib(self):
        return _py_scream_ee.ScreamModel_new_Rotlib(self)
    scream_EE_list = property(_py_scream_ee.ScreamModel_scream_EE_list_get, _py_scream_ee.ScreamModel_scream_EE_list_set)
    rotlib_list = property(_py_scream_ee.ScreamModel_rotlib_list_get, _py_scream_ee.ScreamModel_rotlib_list_set)

# Register ScreamModel in _py_scream_ee:
_py_scream_ee.ScreamModel_swigregister(ScreamModel)
class ScreamParameters(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _py_scream_ee.ScreamParameters_swiginit(self, _py_scream_ee.new_ScreamParameters(*args))
    __swig_destroy__ = _py_scream_ee.delete_ScreamParameters
    InputFileName = property(_py_scream_ee.ScreamParameters_InputFileName_get, _py_scream_ee.ScreamParameters_InputFileName_set)
    MutateResidueInfo = property(_py_scream_ee.ScreamParameters_MutateResidueInfo_get, _py_scream_ee.ScreamParameters_MutateResidueInfo_set)
    AdditionalLibraryInfo = property(_py_scream_ee.ScreamParameters_AdditionalLibraryInfo_get, _py_scream_ee.ScreamParameters_AdditionalLibraryInfo_set)
    Library = property(_py_scream_ee.ScreamParameters_Library_get, _py_scream_ee.ScreamParameters_Library_set)
    PlacementMethod = property(_py_scream_ee.ScreamParameters_PlacementMethod_get, _py_scream_ee.ScreamParameters_PlacementMethod_set)
    CreateCBParameters = property(_py_scream_ee.ScreamParameters_CreateCBParameters_get, _py_scream_ee.ScreamParameters_CreateCBParameters_set)
    KeepOriginalRotamer = property(_py_scream_ee.ScreamParameters_KeepOriginalRotamer_get, _py_scream_ee.ScreamParameters_KeepOriginalRotamer_set)
    UseScreamEnergyFunction = property(_py_scream_ee.ScreamParameters_UseScreamEnergyFunction_get, _py_scream_ee.ScreamParameters_UseScreamEnergyFunction_set)
    UseDeltaMethod = property(_py_scream_ee.ScreamParameters_UseDeltaMethod_get, _py_scream_ee.ScreamParameters_UseDeltaMethod_set)
    UseRotamerNeighborList = property(_py_scream_ee.ScreamParameters_UseRotamerNeighborList_get, _py_scream_ee.ScreamParameters_UseRotamerNeighborList_set)
    UseAsymmetricDelta = property(_py_scream_ee.ScreamParameters_UseAsymmetricDelta_get, _py_scream_ee.ScreamParameters_UseAsymmetricDelta_set)
    UseDeltaForInterResiE = property(_py_scream_ee.ScreamParameters_UseDeltaForInterResiE_get, _py_scream_ee.ScreamParameters_UseDeltaForInterResiE_set)
    FlatDeltaValue = property(_py_scream_ee.ScreamParameters_FlatDeltaValue_get, _py_scream_ee.ScreamParameters_FlatDeltaValue_set)
    DeltaStandardDevs = property(_py_scream_ee.ScreamParameters_DeltaStandardDevs_get, _py_scream_ee.ScreamParameters_DeltaStandardDevs_set)
    InnerWallScalingFactor = property(_py_scream_ee.ScreamParameters_InnerWallScalingFactor_get, _py_scream_ee.ScreamParameters_InnerWallScalingFactor_set)
    NonPolarHCalc = property(_py_scream_ee.ScreamParameters_NonPolarHCalc_get, _py_scream_ee.ScreamParameters_NonPolarHCalc_set)
    ScoringFunction = property(_py_scream_ee.ScreamParameters_ScoringFunction_get, _py_scream_ee.ScreamParameters_ScoringFunction_set)
    MultiplePlacementMethod = property(_py_scream_ee.ScreamParameters_MultiplePlacementMethod_get, _py_scream_ee.ScreamParameters_MultiplePlacementMethod_set)
    CBGroundSpectrumCalc = property(_py_scream_ee.ScreamParameters_CBGroundSpectrumCalc_get, _py_scream_ee.ScreamParameters_CBGroundSpectrumCalc_set)
    OneEnergyFFParFile = property(_py_scream_ee.ScreamParameters_OneEnergyFFParFile_get, _py_scream_ee.ScreamParameters_OneEnergyFFParFile_set)
    DeltaParFile = property(_py_scream_ee.ScreamParameters_DeltaParFile_get, _py_scream_ee.ScreamParameters_DeltaParFile_set)
    EachAtomDeltaFile = property(_py_scream_ee.ScreamParameters_EachAtomDeltaFile_get, _py_scream_ee.ScreamParameters_EachAtomDeltaFile_set)
    PolarOptimizationExclusions = property(_py_scream_ee.ScreamParameters_PolarOptimizationExclusions_get, _py_scream_ee.ScreamParameters_PolarOptimizationExclusions_set)
    LJOption = property(_py_scream_ee.ScreamParameters_LJOption_get, _py_scream_ee.ScreamParameters_LJOption_set)
    CoulombMode = property(_py_scream_ee.ScreamParameters_CoulombMode_get, _py_scream_ee.ScreamParameters_CoulombMode_set)
    Dielectric = property(_py_scream_ee.ScreamParameters_Dielectric_get, _py_scream_ee.ScreamParameters_Dielectric_set)
    Selections = property(_py_scream_ee.ScreamParameters_Selections_get, _py_scream_ee.ScreamParameters_Selections_set)
    MaxSearchNumber = property(_py_scream_ee.ScreamParameters_MaxSearchNumber_get, _py_scream_ee.ScreamParameters_MaxSearchNumber_set)
    AbsStericClashCutoffEL = property(_py_scream_ee.ScreamParameters_AbsStericClashCutoffEL_get, _py_scream_ee.ScreamParameters_AbsStericClashCutoffEL_set)
    StericClashCutoffEnergy = property(_py_scream_ee.ScreamParameters_StericClashCutoffEnergy_get, _py_scream_ee.ScreamParameters_StericClashCutoffEnergy_set)
    StericClashCutoffDist = property(_py_scream_ee.ScreamParameters_StericClashCutoffDist_get, _py_scream_ee.ScreamParameters_StericClashCutoffDist_set)
    MaxFinalStepRunTime = property(_py_scream_ee.ScreamParameters_MaxFinalStepRunTime_get, _py_scream_ee.ScreamParameters_MaxFinalStepRunTime_set)
    LibPath = property(_py_scream_ee.ScreamParameters_LibPath_get, _py_scream_ee.ScreamParameters_LibPath_set)
    Verbosity = property(_py_scream_ee.ScreamParameters_Verbosity_get, _py_scream_ee.ScreamParameters_Verbosity_set)
    DesignPositionAndClass = property(_py_scream_ee.ScreamParameters_DesignPositionAndClass_get, _py_scream_ee.ScreamParameters_DesignPositionAndClass_set)
    DesignAAClassDefns = property(_py_scream_ee.ScreamParameters_DesignAAClassDefns_get, _py_scream_ee.ScreamParameters_DesignAAClassDefns_set)
    JustOutputSequence = property(_py_scream_ee.ScreamParameters_JustOutputSequence_get, _py_scream_ee.ScreamParameters_JustOutputSequence_set)
    StructuresPerSequence = property(_py_scream_ee.ScreamParameters_StructuresPerSequence_get, _py_scream_ee.ScreamParameters_StructuresPerSequence_set)
    BindingSiteMode = property(_py_scream_ee.ScreamParameters_BindingSiteMode_get, _py_scream_ee.ScreamParameters_BindingSiteMode_set)
    FixedResidues = property(_py_scream_ee.ScreamParameters_FixedResidues_get, _py_scream_ee.ScreamParameters_FixedResidues_set)
    AroundAtom = property(_py_scream_ee.ScreamParameters_AroundAtom_get, _py_scream_ee.ScreamParameters_AroundAtom_set)
    AroundResidue = property(_py_scream_ee.ScreamParameters_AroundResidue_get, _py_scream_ee.ScreamParameters_AroundResidue_set)
    AroundChain = property(_py_scream_ee.ScreamParameters_AroundChain_get, _py_scream_ee.ScreamParameters_AroundChain_set)
    AroundDistance = property(_py_scream_ee.ScreamParameters_AroundDistance_get, _py_scream_ee.ScreamParameters_AroundDistance_set)
    AroundDistanceDefn = property(_py_scream_ee.ScreamParameters_AroundDistanceDefn_get, _py_scream_ee.ScreamParameters_AroundDistanceDefn_set)

    def getMutateResidueInfoList(self):
        return _py_scream_ee.ScreamParameters_getMutateResidueInfoList(self)

    def getAdditionalLibraryInfo(self):
        return _py_scream_ee.ScreamParameters_getAdditionalLibraryInfo(self)

    def getKeepOriginalRotamer(self):
        return _py_scream_ee.ScreamParameters_getKeepOriginalRotamer(self)

    def getUseScreamEnergyFunction(self):
        return _py_scream_ee.ScreamParameters_getUseScreamEnergyFunction(self)

    def getPlacementMethod(self):
        return _py_scream_ee.ScreamParameters_getPlacementMethod(self)

    def getCreateCBParameters(self):
        return _py_scream_ee.ScreamParameters_getCreateCBParameters(self)

    def getUseDeltaMethod(self):
        return _py_scream_ee.ScreamParameters_getUseDeltaMethod(self)

    def getUseRotamerNeighborList(self):
        return _py_scream_ee.ScreamParameters_getUseRotamerNeighborList(self)

    def getUseAsymmetricDelta(self):
        return _py_scream_ee.ScreamParameters_getUseAsymmetricDelta(self)

    def getUseDeltaForInterResiE(self):
        return _py_scream_ee.ScreamParameters_getUseDeltaForInterResiE(self)

    def getFlatDeltaValue(self):
        return _py_scream_ee.ScreamParameters_getFlatDeltaValue(self)

    def getDeltaStandardDevs(self):
        return _py_scream_ee.ScreamParameters_getDeltaStandardDevs(self)

    def getInnerWallScalingFactor(self):
        return _py_scream_ee.ScreamParameters_getInnerWallScalingFactor(self)

    def getNonPolarHCalc(self):
        return _py_scream_ee.ScreamParameters_getNonPolarHCalc(self)

    def getOneEnergyFFParFile(self):
        return _py_scream_ee.ScreamParameters_getOneEnergyFFParFile(self)

    def getDeltaParFile(self):
        return _py_scream_ee.ScreamParameters_getDeltaParFile(self)

    def getEachAtomDeltaFile(self):
        return _py_scream_ee.ScreamParameters_getEachAtomDeltaFile(self)

    def getPolarOptimizationExclusions(self):
        return _py_scream_ee.ScreamParameters_getPolarOptimizationExclusions(self)

    def getSelections(self):
        return _py_scream_ee.ScreamParameters_getSelections(self)

    def getMaxSearchNumber(self):
        return _py_scream_ee.ScreamParameters_getMaxSearchNumber(self)

    def getAbsStericClashCutoffEL(self):
        return _py_scream_ee.ScreamParameters_getAbsStericClashCutoffEL(self)

    def getStericClashCutoffEnergy(self):
        return _py_scream_ee.ScreamParameters_getStericClashCutoffEnergy(self)

    def getStericClashCutoffDist(self):
        return _py_scream_ee.ScreamParameters_getStericClashCutoffDist(self)

    def getMaxFinalStepRunTime(self):
        return _py_scream_ee.ScreamParameters_getMaxFinalStepRunTime(self)

    def getDesignPositionAndClass(self):
        return _py_scream_ee.ScreamParameters_getDesignPositionAndClass(self)

    def getDesignAAClassDefns(self):
        return _py_scream_ee.ScreamParameters_getDesignAAClassDefns(self)

    def getJustOutputSequence(self):
        return _py_scream_ee.ScreamParameters_getJustOutputSequence(self)

    def getLJOption(self):
        return _py_scream_ee.ScreamParameters_getLJOption(self)

    def getCoulombMode(self):
        return _py_scream_ee.ScreamParameters_getCoulombMode(self)

    def getDielectric(self):
        return _py_scream_ee.ScreamParameters_getDielectric(self)

    def getBindingSiteMode(self):
        return _py_scream_ee.ScreamParameters_getBindingSiteMode(self)

    def getFixedResidues(self):
        return _py_scream_ee.ScreamParameters_getFixedResidues(self)

    def getAroundAtom(self):
        return _py_scream_ee.ScreamParameters_getAroundAtom(self)

    def getAroundResidue(self):
        return _py_scream_ee.ScreamParameters_getAroundResidue(self)

    def getAroundChain(self):
        return _py_scream_ee.ScreamParameters_getAroundChain(self)

    def getAroundDistance(self):
        return _py_scream_ee.ScreamParameters_getAroundDistance(self)

    def getAroundDistanceDefn(self):
        return _py_scream_ee.ScreamParameters_getAroundDistanceDefn(self)

    def getDesignPositions(self):
        return _py_scream_ee.ScreamParameters_getDesignPositions(self)

    def getDesignClassFromPosition(self, arg2):
        return _py_scream_ee.ScreamParameters_getDesignClassFromPosition(self, arg2)

    def getDesignClassAAs(self, arg2):
        return _py_scream_ee.ScreamParameters_getDesignClassAAs(self, arg2)

    def multiplePlacementMethod(self):
        return _py_scream_ee.ScreamParameters_multiplePlacementMethod(self)

    def getCBGroundSpectrumCalc(self):
        return _py_scream_ee.ScreamParameters_getCBGroundSpectrumCalc(self)

    def read_scream_par_file(self, arg2):
        return _py_scream_ee.ScreamParameters_read_scream_par_file(self, arg2)

    def print_to_output(self, arg2):
        return _py_scream_ee.ScreamParameters_print_to_output(self, arg2)

    def minimizationMethod(self):
        return _py_scream_ee.ScreamParameters_minimizationMethod(self)

    def minimizationSteps(self):
        return _py_scream_ee.ScreamParameters_minimizationSteps(self)

    def oneEMethod(self):
        return _py_scream_ee.ScreamParameters_oneEMethod(self)

    def residueToScreamName(self, arg2):
        return _py_scream_ee.ScreamParameters_residueToScreamName(self, arg2)

    def residueToScreamPstn(self, arg2):
        return _py_scream_ee.ScreamParameters_residueToScreamPstn(self, arg2)

    def residueToScreamChn(self, arg2):
        return _py_scream_ee.ScreamParameters_residueToScreamChn(self, arg2)

    def determineLibDirPath(self):
        return _py_scream_ee.ScreamParameters_determineLibDirPath(self)

    def determineLibDirFileNameSuffix(self):
        return _py_scream_ee.ScreamParameters_determineLibDirFileNameSuffix(self)

    def determineCnnDirPath(self):
        return _py_scream_ee.ScreamParameters_determineCnnDirPath(self)

    def getLibResolution(self):
        return _py_scream_ee.ScreamParameters_getLibResolution(self)

    def returnEnergyMethod(self):
        return _py_scream_ee.ScreamParameters_returnEnergyMethod(self)

    def returnEnergyMethodTValue(self):
        return _py_scream_ee.ScreamParameters_returnEnergyMethodTValue(self)

    def getVerbosity(self):
        return _py_scream_ee.ScreamParameters_getVerbosity(self)

    def _init_default_params(self):
        return _py_scream_ee.ScreamParameters__init_default_params(self)

# Register ScreamParameters in _py_scream_ee:
_py_scream_ee.ScreamParameters_swigregister(ScreamParameters)
class SCREAM_ATOM(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _py_scream_ee.SCREAM_ATOM_swiginit(self, _py_scream_ee.new_SCREAM_ATOM(*args))
    __swig_destroy__ = _py_scream_ee.delete_SCREAM_ATOM

    def pdb_init(self, arg2):
        return _py_scream_ee.SCREAM_ATOM_pdb_init(self, arg2)

    def set_x(self, x):
        return _py_scream_ee.SCREAM_ATOM_set_x(self, x)

    def set_y(self, y):
        return _py_scream_ee.SCREAM_ATOM_set_y(self, y)

    def set_z(self, z):
        return _py_scream_ee.SCREAM_ATOM_set_z(self, z)

    def getAtomLabel(self):
        return _py_scream_ee.SCREAM_ATOM_getAtomLabel(self)

    def setAtomLabel(self, arg2):
        return _py_scream_ee.SCREAM_ATOM_setAtomLabel(self, arg2)

    def getAtomType(self):
        return _py_scream_ee.SCREAM_ATOM_getAtomType(self)

    def setAtomType(self, arg2):
        return _py_scream_ee.SCREAM_ATOM_setAtomType(self, arg2)

    def getX(self):
        return _py_scream_ee.SCREAM_ATOM_getX(self)

    def setX(self, x):
        return _py_scream_ee.SCREAM_ATOM_setX(self, x)

    def getY(self):
        return _py_scream_ee.SCREAM_ATOM_getY(self)

    def setY(self, y):
        return _py_scream_ee.SCREAM_ATOM_setY(self, y)

    def getZ(self):
        return _py_scream_ee.SCREAM_ATOM_getZ(self)

    def setZ(self, z):
        return _py_scream_ee.SCREAM_ATOM_setZ(self, z)

    def getCharge(self):
        return _py_scream_ee.SCREAM_ATOM_getCharge(self)

    def setCharge(self, q):
        return _py_scream_ee.SCREAM_ATOM_setCharge(self, q)

    def getResName(self):
        return _py_scream_ee.SCREAM_ATOM_getResName(self)

    def setResName(self, s):
        return _py_scream_ee.SCREAM_ATOM_setResName(self, s)

    def getChain(self):
        return _py_scream_ee.SCREAM_ATOM_getChain(self)

    def setChain(self, chn):
        return _py_scream_ee.SCREAM_ATOM_setChain(self, chn)

    def getResNum(self):
        return _py_scream_ee.SCREAM_ATOM_getResNum(self)

    def setResNum(self, resNum):
        return _py_scream_ee.SCREAM_ATOM_setResNum(self, resNum)
    GLOBAL_ATOM_N = property(_py_scream_ee.SCREAM_ATOM_GLOBAL_ATOM_N_get, _py_scream_ee.SCREAM_ATOM_GLOBAL_ATOM_N_set)
    keyw = property(_py_scream_ee.SCREAM_ATOM_keyw_get, _py_scream_ee.SCREAM_ATOM_keyw_set)
    atomLabel = property(_py_scream_ee.SCREAM_ATOM_atomLabel_get, _py_scream_ee.SCREAM_ATOM_atomLabel_set)
    stripped_atomLabel = property(_py_scream_ee.SCREAM_ATOM_stripped_atomLabel_get, _py_scream_ee.SCREAM_ATOM_stripped_atomLabel_set)
    isSC_Flag = property(_py_scream_ee.SCREAM_ATOM_isSC_Flag_get, _py_scream_ee.SCREAM_ATOM_isSC_Flag_set)
    isAAResAtom = property(_py_scream_ee.SCREAM_ATOM_isAAResAtom_get, _py_scream_ee.SCREAM_ATOM_isAAResAtom_set)
    atomType = property(_py_scream_ee.SCREAM_ATOM_atomType_get, _py_scream_ee.SCREAM_ATOM_atomType_set)
    stripped_atomType = property(_py_scream_ee.SCREAM_ATOM_stripped_atomType_get, _py_scream_ee.SCREAM_ATOM_stripped_atomType_set)
    occupancy = property(_py_scream_ee.SCREAM_ATOM_occupancy_get, _py_scream_ee.SCREAM_ATOM_occupancy_set)
    BFactor = property(_py_scream_ee.SCREAM_ATOM_BFactor_get, _py_scream_ee.SCREAM_ATOM_BFactor_set)
    resName = property(_py_scream_ee.SCREAM_ATOM_resName_get, _py_scream_ee.SCREAM_ATOM_resName_set)
    oneLetterResName = property(_py_scream_ee.SCREAM_ATOM_oneLetterResName_get, _py_scream_ee.SCREAM_ATOM_oneLetterResName_set)
    chain = property(_py_scream_ee.SCREAM_ATOM_chain_get, _py_scream_ee.SCREAM_ATOM_chain_set)
    resNum = property(_py_scream_ee.SCREAM_ATOM_resNum_get, _py_scream_ee.SCREAM_ATOM_resNum_set)
    atoms_connected = property(_py_scream_ee.SCREAM_ATOM_atoms_connected_get, _py_scream_ee.SCREAM_ATOM_atoms_connected_set)
    lone_pair = property(_py_scream_ee.SCREAM_ATOM_lone_pair_get, _py_scream_ee.SCREAM_ATOM_lone_pair_set)
    x = property(_py_scream_ee.SCREAM_ATOM_x_get, _py_scream_ee.SCREAM_ATOM_x_set)
    q = property(_py_scream_ee.SCREAM_ATOM_q_get, _py_scream_ee.SCREAM_ATOM_q_set)
    n = property(_py_scream_ee.SCREAM_ATOM_n_get, _py_scream_ee.SCREAM_ATOM_n_set)
    type = property(_py_scream_ee.SCREAM_ATOM_type_get, _py_scream_ee.SCREAM_ATOM_type_set)
    flags = property(_py_scream_ee.SCREAM_ATOM_flags_get, _py_scream_ee.SCREAM_ATOM_flags_set)
    m = property(_py_scream_ee.SCREAM_ATOM_m_get, _py_scream_ee.SCREAM_ATOM_m_set)
    vchg2 = property(_py_scream_ee.SCREAM_ATOM_vchg2_get, _py_scream_ee.SCREAM_ATOM_vchg2_set)
    library_name = property(_py_scream_ee.SCREAM_ATOM_library_name_get, _py_scream_ee.SCREAM_ATOM_library_name_set)
    vdw_r = property(_py_scream_ee.SCREAM_ATOM_vdw_r_get, _py_scream_ee.SCREAM_ATOM_vdw_r_set)
    vdw_d = property(_py_scream_ee.SCREAM_ATOM_vdw_d_get, _py_scream_ee.SCREAM_ATOM_vdw_d_set)
    vdw_s = property(_py_scream_ee.SCREAM_ATOM_vdw_s_get, _py_scream_ee.SCREAM_ATOM_vdw_s_set)
    vachg = property(_py_scream_ee.SCREAM_ATOM_vachg_get, _py_scream_ee.SCREAM_ATOM_vachg_set)
    vrchg = property(_py_scream_ee.SCREAM_ATOM_vrchg_get, _py_scream_ee.SCREAM_ATOM_vrchg_set)
    hb_da = property(_py_scream_ee.SCREAM_ATOM_hb_da_get, _py_scream_ee.SCREAM_ATOM_hb_da_set)
    a = property(_py_scream_ee.SCREAM_ATOM_a_get, _py_scream_ee.SCREAM_ATOM_a_set)
    delta = property(_py_scream_ee.SCREAM_ATOM_delta_get, _py_scream_ee.SCREAM_ATOM_delta_set)
    connectivity_m = property(_py_scream_ee.SCREAM_ATOM_connectivity_m_get, _py_scream_ee.SCREAM_ATOM_connectivity_m_set)

    def initFlag(self):
        return _py_scream_ee.SCREAM_ATOM_initFlag(self)

    def resetFlag(self):
        return _py_scream_ee.SCREAM_ATOM_resetFlag(self)

    def make_atom_moveable(self):
        return _py_scream_ee.SCREAM_ATOM_make_atom_moveable(self)

    def make_atom_fixed(self):
        return _py_scream_ee.SCREAM_ATOM_make_atom_fixed(self)

    def make_atom_invisible(self):
        return _py_scream_ee.SCREAM_ATOM_make_atom_invisible(self)

    def make_atom_visible(self):
        return _py_scream_ee.SCREAM_ATOM_make_atom_visible(self)

    def make_atom_EL_invisible(self):
        return _py_scream_ee.SCREAM_ATOM_make_atom_EL_invisible(self)

    def make_atom_EL_visible(self):
        return _py_scream_ee.SCREAM_ATOM_make_atom_EL_visible(self)

    def is_part_of_EE(self):
        return _py_scream_ee.SCREAM_ATOM_is_part_of_EE(self)

    def fix_atom(self, value):
        return _py_scream_ee.SCREAM_ATOM_fix_atom(self, value)

    def distance(self, arg2):
        return _py_scream_ee.SCREAM_ATOM_distance(self, arg2)

    def distance_squared(self, arg2):
        return _py_scream_ee.SCREAM_ATOM_distance_squared(self, arg2)

    def worst_clash_dist(self, arg2, arg3=None):
        return _py_scream_ee.SCREAM_ATOM_worst_clash_dist(self, arg2, arg3)

    def feed_me(self, bgf_line):
        return _py_scream_ee.SCREAM_ATOM_feed_me(self, bgf_line)

    def feed_me_pdb(self, pdb_line):
        return _py_scream_ee.SCREAM_ATOM_feed_me_pdb(self, pdb_line)

    def make_bond(self, arg2, arg3=0):
        return _py_scream_ee.SCREAM_ATOM_make_bond(self, arg2, arg3)

    def delete_bond(self, arg2):
        return _py_scream_ee.SCREAM_ATOM_delete_bond(self, arg2)

    def copy(self, arg2):
        return _py_scream_ee.SCREAM_ATOM_copy(self, arg2)

    def copyJustCoords(self, arg2):
        return _py_scream_ee.SCREAM_ATOM_copyJustCoords(self, arg2)

    def dump(self):
        return _py_scream_ee.SCREAM_ATOM_dump(self)

    def pdb_dump(self):
        return _py_scream_ee.SCREAM_ATOM_pdb_dump(self)

    def return_bgf_line(self):
        return _py_scream_ee.SCREAM_ATOM_return_bgf_line(self)

    def return_pdb_line(self):
        return _py_scream_ee.SCREAM_ATOM_return_pdb_line(self)

    def append_to_filehandle(self, arg2):
        return _py_scream_ee.SCREAM_ATOM_append_to_filehandle(self, arg2)

    def pdb_append_to_filehandle(self, arg2):
        return _py_scream_ee.SCREAM_ATOM_pdb_append_to_filehandle(self, arg2)

    def pdb_append_to_ostream_connect_info(self, arg2):
        return _py_scream_ee.SCREAM_ATOM_pdb_append_to_ostream_connect_info(self, arg2)

    def append_to_ostream_connect_info(self, arg2):
        return _py_scream_ee.SCREAM_ATOM_append_to_ostream_connect_info(self, arg2)

# Register SCREAM_ATOM in _py_scream_ee:
_py_scream_ee.SCREAM_ATOM_swigregister(SCREAM_ATOM)
class Rotamer(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _py_scream_ee.Rotamer_swiginit(self, _py_scream_ee.new_Rotamer(*args))
    __swig_destroy__ = _py_scream_ee.delete_Rotamer

    def deepcopy(self, arg2):
        return _py_scream_ee.Rotamer_deepcopy(self, arg2)

    def read_cnn_lines(self, arg2):
        return _py_scream_ee.Rotamer_read_cnn_lines(self, arg2)

    def print_Me(self):
        return _py_scream_ee.Rotamer_print_Me(self)

    def print_ordered_by_n(self):
        return _py_scream_ee.Rotamer_print_ordered_by_n(self)

    def append_to_filehandle(self, arg2):
        return _py_scream_ee.Rotamer_append_to_filehandle(self, arg2)

    def pdb_append_to_filehandle(self, arg2):
        return _py_scream_ee.Rotamer_pdb_append_to_filehandle(self, arg2)

    def append_to_ostream_connect_info(self, arg2):
        return _py_scream_ee.Rotamer_append_to_ostream_connect_info(self, arg2)

    def printEnergies(self):
        return _py_scream_ee.Rotamer_printEnergies(self)
    self_E = property(_py_scream_ee.Rotamer_self_E_get, _py_scream_ee.Rotamer_self_E_set)
    is_Original = property(_py_scream_ee.Rotamer_is_Original_get, _py_scream_ee.Rotamer_is_Original_set)

    def get_is_Original_flag(self):
        return _py_scream_ee.Rotamer_get_is_Original_flag(self)

    def set_is_Original_flag(self, FLAG):
        return _py_scream_ee.Rotamer_set_is_Original_flag(self, FLAG)
    same_backbone = property(_py_scream_ee.Rotamer_same_backbone_get, _py_scream_ee.Rotamer_same_backbone_set)
    library_name = property(_py_scream_ee.Rotamer_library_name_get, _py_scream_ee.Rotamer_library_name_set)

    def get_bb(self):
        return _py_scream_ee.Rotamer_get_bb(self)

    def get_sc(self):
        return _py_scream_ee.Rotamer_get_sc(self)

    def get_sc_atoms(self):
        return _py_scream_ee.Rotamer_get_sc_atoms(self)

    def get_bb_atoms(self):
        return _py_scream_ee.Rotamer_get_bb_atoms(self)

    def getAtom(self, arg2):
        return _py_scream_ee.Rotamer_getAtom(self, arg2)

    def getTheseAtoms(self, arg2):
        return _py_scream_ee.Rotamer_getTheseAtoms(self, arg2)

    def getAllRotamers(self):
        return _py_scream_ee.Rotamer_getAllRotamers(self)

    def fix_toggle(self, arg2):
        return _py_scream_ee.Rotamer_fix_toggle(self, arg2)

    def fix_sc_toggle(self, arg2):
        return _py_scream_ee.Rotamer_fix_sc_toggle(self, arg2)

    def fix_bb_toggle(self, arg2):
        return _py_scream_ee.Rotamer_fix_bb_toggle(self, arg2)

    def number_of_atoms(self):
        return _py_scream_ee.Rotamer_number_of_atoms(self)

    def total_charge(self):
        return _py_scream_ee.Rotamer_total_charge(self)

    def get_rotamer_n(self):
        return _py_scream_ee.Rotamer_get_rotamer_n(self)

    def get_mult_H_n(self):
        return _py_scream_ee.Rotamer_get_mult_H_n(self)

    def get_library_name(self):
        return _py_scream_ee.Rotamer_get_library_name(self)

    def get_empty_lattice_E(self):
        return _py_scream_ee.Rotamer_get_empty_lattice_E(self)

    def set_empty_lattice_E(self, E):
        return _py_scream_ee.Rotamer_set_empty_lattice_E(self, E)

    def get_empty_lattice_E_abs(self):
        return _py_scream_ee.Rotamer_get_empty_lattice_E_abs(self)

    def set_empty_lattice_E_abs(self, E):
        return _py_scream_ee.Rotamer_set_empty_lattice_E_abs(self, E)

    def get_empty_lattice_energy_rank(self):
        return _py_scream_ee.Rotamer_get_empty_lattice_energy_rank(self)

    def set_empty_lattice_energy_rank(self, rank):
        return _py_scream_ee.Rotamer_set_empty_lattice_energy_rank(self, rank)

    def setFailedDistanceCutoff(self):
        return _py_scream_ee.Rotamer_setFailedDistanceCutoff(self)

    def setPassedDistanceCutoff(self):
        return _py_scream_ee.Rotamer_setPassedDistanceCutoff(self)

    def failedDistanceCutoff(self):
        return _py_scream_ee.Rotamer_failedDistanceCutoff(self)

    def sameResidueTypeAs(self, arg2):
        return _py_scream_ee.Rotamer_sameResidueTypeAs(self, arg2)

    def get_preCalc_Energy_Line(self):
        return _py_scream_ee.Rotamer_get_preCalc_Energy_Line(self)

    def populate_preCalc_Terms(self, arg2):
        return _py_scream_ee.Rotamer_populate_preCalc_Terms(self, arg2)

    def get_preCalc_TotE(self):
        return _py_scream_ee.Rotamer_get_preCalc_TotE(self)

    def get_preCalc_BondsE(self):
        return _py_scream_ee.Rotamer_get_preCalc_BondsE(self)

    def get_preCalc_AnglesE(self):
        return _py_scream_ee.Rotamer_get_preCalc_AnglesE(self)

    def get_preCalc_TorsionsE(self):
        return _py_scream_ee.Rotamer_get_preCalc_TorsionsE(self)

    def get_preCalc_InversionsE(self):
        return _py_scream_ee.Rotamer_get_preCalc_InversionsE(self)

    def get_preCalc_CoulombE(self):
        return _py_scream_ee.Rotamer_get_preCalc_CoulombE(self)

    def get_preCalc_vdwE(self):
        return _py_scream_ee.Rotamer_get_preCalc_vdwE(self)

    def get_preCalc_HBondE(self):
        return _py_scream_ee.Rotamer_get_preCalc_HBondE(self)

    def get_preCalc_SolvE(self):
        return _py_scream_ee.Rotamer_get_preCalc_SolvE(self)

    def set_preCalc_TotE(self, E):
        return _py_scream_ee.Rotamer_set_preCalc_TotE(self, E)

    def set_preCalc_BondsE(self, E):
        return _py_scream_ee.Rotamer_set_preCalc_BondsE(self, E)

    def set_preCalc_AnglesE(self, E):
        return _py_scream_ee.Rotamer_set_preCalc_AnglesE(self, E)

    def set_preCalc_TorsionsE(self, E):
        return _py_scream_ee.Rotamer_set_preCalc_TorsionsE(self, E)

    def set_preCalc_InversionsE(self, E):
        return _py_scream_ee.Rotamer_set_preCalc_InversionsE(self, E)

    def set_preCalc_CoulombE(self, E):
        return _py_scream_ee.Rotamer_set_preCalc_CoulombE(self, E)

    def set_preCalc_vdwE(self, E):
        return _py_scream_ee.Rotamer_set_preCalc_vdwE(self, E)

    def set_preCalc_HBondE(self, E):
        return _py_scream_ee.Rotamer_set_preCalc_HBondE(self, E)

    def set_preCalc_SolvE(self, E):
        return _py_scream_ee.Rotamer_set_preCalc_SolvE(self, E)

    def get_rotlib_E(self):
        return _py_scream_ee.Rotamer_get_rotlib_E(self)

    def get_sc_valence_E(self):
        return _py_scream_ee.Rotamer_get_sc_valence_E(self)

    def get_sc_coulomb_E(self):
        return _py_scream_ee.Rotamer_get_sc_coulomb_E(self)

    def get_sc_vdw_E(self):
        return _py_scream_ee.Rotamer_get_sc_vdw_E(self)

    def get_sc_hb_E(self):
        return _py_scream_ee.Rotamer_get_sc_hb_E(self)

    def get_sc_total_nb_E(self):
        return _py_scream_ee.Rotamer_get_sc_total_nb_E(self)

    def get_sc_solvation_E(self):
        return _py_scream_ee.Rotamer_get_sc_solvation_E(self)

    def get_sc_total_E(self):
        return _py_scream_ee.Rotamer_get_sc_total_E(self)

    def set_rotamer_n(self, n):
        return _py_scream_ee.Rotamer_set_rotamer_n(self, n)

    def set_rotlib_E(self, E):
        return _py_scream_ee.Rotamer_set_rotlib_E(self, E)

    def set_sc_valence_E(self, E):
        return _py_scream_ee.Rotamer_set_sc_valence_E(self, E)

    def set_sc_coulomb_E(self, E):
        return _py_scream_ee.Rotamer_set_sc_coulomb_E(self, E)

    def set_sc_vdw_E(self, E):
        return _py_scream_ee.Rotamer_set_sc_vdw_E(self, E)

    def set_sc_hb_E(self, E):
        return _py_scream_ee.Rotamer_set_sc_hb_E(self, E)

    def set_sc_total_nb_E(self, E):
        return _py_scream_ee.Rotamer_set_sc_total_nb_E(self, E)

    def set_sc_solvation_E(self, E):
        return _py_scream_ee.Rotamer_set_sc_solvation_E(self, E)

    def set_sc_total_E(self, E):
        return _py_scream_ee.Rotamer_set_sc_total_E(self, E)

    def match_bb(self, arg2):
        return _py_scream_ee.Rotamer_match_bb(self, arg2)

    def match_CB(self, arg2, arg3, arg4):
        return _py_scream_ee.Rotamer_match_CB(self, arg2, arg3, arg4)

    def assign_atom_fftype(self):
        return _py_scream_ee.Rotamer_assign_atom_fftype(self)

    def assign_charges(self, scheme):
        return _py_scream_ee.Rotamer_assign_charges(self, scheme)

    def assign_lone_pair(self):
        return _py_scream_ee.Rotamer_assign_lone_pair(self)

    def declaredInRotlibScope(self):
        return _py_scream_ee.Rotamer_declaredInRotlibScope(self)

    def setDeclaredInRotlibScope(self, b):
        return _py_scream_ee.Rotamer_setDeclaredInRotlibScope(self, b)

# Register Rotamer in _py_scream_ee:
_py_scream_ee.Rotamer_swigregister(Rotamer)
class AARotamer(Rotamer):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _py_scream_ee.AARotamer_swiginit(self, _py_scream_ee.new_AARotamer(*args))
    __swig_destroy__ = _py_scream_ee.delete_AARotamer

    def deepcopy(self, arg2):
        return _py_scream_ee.AARotamer_deepcopy(self, arg2)

    def get_resName(self):
        return _py_scream_ee.AARotamer_get_resName(self)

    def set_resName(self, s):
        return _py_scream_ee.AARotamer_set_resName(self, s)

    def initRotamerAtomList(self, arg2):
        return _py_scream_ee.AARotamer_initRotamerAtomList(self, arg2)

    def calc_PHI(self):
        return _py_scream_ee.AARotamer_calc_PHI(self)

    def calc_PSI(self):
        return _py_scream_ee.AARotamer_calc_PSI(self)

    def get_PHI(self):
        return _py_scream_ee.AARotamer_get_PHI(self)

    def get_PSI(self):
        return _py_scream_ee.AARotamer_get_PSI(self)

    def chi1(self):
        return _py_scream_ee.AARotamer_chi1(self)

    def chi2(self):
        return _py_scream_ee.AARotamer_chi2(self)

    def chi3(self):
        return _py_scream_ee.AARotamer_chi3(self)

    def chi4(self):
        return _py_scream_ee.AARotamer_chi4(self)

    def chi5(self):
        return _py_scream_ee.AARotamer_chi5(self)

    def match_bb(self, arg2):
        return _py_scream_ee.AARotamer_match_bb(self, arg2)

    def match_CB(self, arg2, arg3, arg4):
        return _py_scream_ee.AARotamer_match_CB(self, arg2, arg3, arg4)

    def create_CB(self, arg2, arg3):
        return _py_scream_ee.AARotamer_create_CB(self, arg2, arg3)

    def assign_atom_fftype(self):
        return _py_scream_ee.AARotamer_assign_atom_fftype(self)

    def assign_charges(self, arg2, arg3=0):
        return _py_scream_ee.AARotamer_assign_charges(self, arg2, arg3)

    def assign_lone_pair(self):
        return _py_scream_ee.AARotamer_assign_lone_pair(self)

    def calc_C_i_minus_one(self):
        return _py_scream_ee.AARotamer_calc_C_i_minus_one(self)

    def center_CA(self):
        return _py_scream_ee.AARotamer_center_CA(self)

    def append_to_filehandle(self, arg2):
        return _py_scream_ee.AARotamer_append_to_filehandle(self, arg2)

    def pdb_append_to_filehandle(self, arg2):
        return _py_scream_ee.AARotamer_pdb_append_to_filehandle(self, arg2)

    def append_to_ostream_connect_info(self, arg2):
        return _py_scream_ee.AARotamer_append_to_ostream_connect_info(self, arg2)

    def print_Me(self):
        return _py_scream_ee.AARotamer_print_Me(self)

    def print_ordered_by_n(self):
        return _py_scream_ee.AARotamer_print_ordered_by_n(self)

    def get_bb(self):
        return _py_scream_ee.AARotamer_get_bb(self)

    def get_sc(self):
        return _py_scream_ee.AARotamer_get_sc(self)
    PHI = property(_py_scream_ee.AARotamer_PHI_get, _py_scream_ee.AARotamer_PHI_set)
    PSI = property(_py_scream_ee.AARotamer_PSI_get, _py_scream_ee.AARotamer_PSI_set)
    resName = property(_py_scream_ee.AARotamer_resName_get, _py_scream_ee.AARotamer_resName_set)

    def private_chi(self, arg2):
        return _py_scream_ee.AARotamer_private_chi(self, arg2)

    def _determine_and_fix_GLY_sidechain_HCA_issue(self, arg2):
        return _py_scream_ee.AARotamer__determine_and_fix_GLY_sidechain_HCA_issue(self, arg2)

# Register AARotamer in _py_scream_ee:
_py_scream_ee.AARotamer_swigregister(AARotamer)
class Protein(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, arg2):
        _py_scream_ee.Protein_swiginit(self, _py_scream_ee.new_Protein(arg2))
    __swig_destroy__ = _py_scream_ee.delete_Protein

    def get_AAChain(self, arg2):
        return _py_scream_ee.Protein_get_AAChain(self, arg2)

    def get_Ligand(self):
        return _py_scream_ee.Protein_get_Ligand(self)

    def get_Component_with_ChainName(self, arg2):
        return _py_scream_ee.Protein_get_Component_with_ChainName(self, arg2)

    def get_res_type(self, arg2, arg3):
        return _py_scream_ee.Protein_get_res_type(self, arg2, arg3)

    def get_sc_atoms(self, *args):
        return _py_scream_ee.Protein_get_sc_atoms(self, *args)

    def get_variable_atoms(self, arg2):
        return _py_scream_ee.Protein_get_variable_atoms(self, arg2)

    def get_visible_in_EL_mutInfo_atoms(self, arg2, arg3):
        return _py_scream_ee.Protein_get_visible_in_EL_mutInfo_atoms(self, arg2, arg3)

    def getAtomList(self, *args):
        return _py_scream_ee.Protein_getAtomList(self, *args)

    def getNewAtomList(self):
        return _py_scream_ee.Protein_getNewAtomList(self)

    def getAtom(self, *args):
        return _py_scream_ee.Protein_getAtom(self, *args)

    def getTheseAtoms(self, arg2):
        return _py_scream_ee.Protein_getTheseAtoms(self, arg2)

    def addHydrogens(self):
        return _py_scream_ee.Protein_addHydrogens(self)

    def addConnectivity(self):
        return _py_scream_ee.Protein_addConnectivity(self)

    def assignFFType(self, *args):
        return _py_scream_ee.Protein_assignFFType(self, *args)

    def residuesAroundAtomN(self, arg2, arg3, arg4):
        return _py_scream_ee.Protein_residuesAroundAtomN(self, arg2, arg3, arg4)

    def residuesAroundResidue(self, arg2, arg3, arg4):
        return _py_scream_ee.Protein_residuesAroundResidue(self, arg2, arg3, arg4)

    def residuesAroundChain(self, arg2, arg3, arg4):
        return _py_scream_ee.Protein_residuesAroundChain(self, arg2, arg3, arg4)

    def residuesAroundAtom(self, arg2, arg3, arg4):
        return _py_scream_ee.Protein_residuesAroundAtom(self, arg2, arg3, arg4)

    def totalComponents(self):
        return _py_scream_ee.Protein_totalComponents(self)

    def mutationDone(self):
        return _py_scream_ee.Protein_mutationDone(self)

    def setMutInfoStrainEnergy(self, arg2, arg3):
        return _py_scream_ee.Protein_setMutInfoStrainEnergy(self, arg2, arg3)

    def getMutInfoStrainEnergy(self, arg2):
        return _py_scream_ee.Protein_getMutInfoStrainEnergy(self, arg2)

    def printAtomFlagStates(self):
        return _py_scream_ee.Protein_printAtomFlagStates(self)

    def getPlacementMethod(self):
        return _py_scream_ee.Protein_getPlacementMethod(self)

    def setPlacementMethod(self, method):
        return _py_scream_ee.Protein_setPlacementMethod(self, method)

    def getOffBisectorAngle(self):
        return _py_scream_ee.Protein_getOffBisectorAngle(self)

    def getOffPlaneAngle(self):
        return _py_scream_ee.Protein_getOffPlaneAngle(self)

    def getBondLength(self):
        return _py_scream_ee.Protein_getBondLength(self)

    def getRotamerMatchVectorLamdba(self):
        return _py_scream_ee.Protein_getRotamerMatchVectorLamdba(self)

    def setOffBisectorAngle(self, d):
        return _py_scream_ee.Protein_setOffBisectorAngle(self, d)

    def setOffPlaneAngle(self, d):
        return _py_scream_ee.Protein_setOffPlaneAngle(self, d)

    def setBondLength(self, d):
        return _py_scream_ee.Protein_setBondLength(self, d)

    def setRotamerMatchVectorLamdba(self, d):
        return _py_scream_ee.Protein_setRotamerMatchVectorLamdba(self, d)

    def ntrlRotamerPlacement(self, arg2, arg3, arg4):
        return _py_scream_ee.Protein_ntrlRotamerPlacement(self, arg2, arg3, arg4)

    def getAARotamer(self, arg2, arg3):
        return _py_scream_ee.Protein_getAARotamer(self, arg2, arg3)

    def conformerPlacement(self, conformer, arg3):
        return _py_scream_ee.Protein_conformerPlacement(self, conformer, arg3)

    def conformerExtraction(self, arg2):
        return _py_scream_ee.Protein_conformerExtraction(self, arg2)

    def rotamerClusterPlacement(self, cluster, mI):
        return _py_scream_ee.Protein_rotamerClusterPlacement(self, cluster, mI)

    def setRotamerClusterEmptyLatticeEnergy(self, cluster, mI, E):
        return _py_scream_ee.Protein_setRotamerClusterEmptyLatticeEnergy(self, cluster, mI, E)

    def getRotamerClusterEmptyLatticeEnergy(self, cluster, mI):
        return _py_scream_ee.Protein_getRotamerClusterEmptyLatticeEnergy(self, cluster, mI)

    def mutation(self, arg2, arg3, arg4):
        return _py_scream_ee.Protein_mutation(self, arg2, arg3, arg4)

    def setPreCalcEnergy(self, arg2, arg3, arg4):
        return _py_scream_ee.Protein_setPreCalcEnergy(self, arg2, arg3, arg4)

    def getPreCalcEnergy(self, arg2, arg3):
        return _py_scream_ee.Protein_getPreCalcEnergy(self, arg2, arg3)

    def setEmptyLatticeEnergy(self, arg2, arg3, arg4):
        return _py_scream_ee.Protein_setEmptyLatticeEnergy(self, arg2, arg3, arg4)

    def getEmptyLatticeEnergy(self, arg2, arg3):
        return _py_scream_ee.Protein_getEmptyLatticeEnergy(self, arg2, arg3)

    def setSideChainLibraryName(self, arg2, arg3, arg4):
        return _py_scream_ee.Protein_setSideChainLibraryName(self, arg2, arg3, arg4)

    def setProteinLibraryName(self, arg2):
        return _py_scream_ee.Protein_setProteinLibraryName(self, arg2)

    def resetFlags(self):
        return _py_scream_ee.Protein_resetFlags(self)

    def getNewMapping(self):
        return _py_scream_ee.Protein_getNewMapping(self)

    def sc_clash(self, *args):
        return _py_scream_ee.Protein_sc_clash(self, *args)

    def conformer_clash(self, *args):
        return _py_scream_ee.Protein_conformer_clash(self, *args)

    def sc_CRMS(self, arg2, arg3, arg4):
        return _py_scream_ee.Protein_sc_CRMS(self, arg2, arg3, arg4)

    def conformer_CRMS(self, arg2, arg3):
        return _py_scream_ee.Protein_conformer_CRMS(self, arg2, arg3)

    def max_atom_dist_on_SC(self, arg2, arg3, arg4):
        return _py_scream_ee.Protein_max_atom_dist_on_SC(self, arg2, arg3, arg4)

    def sc_atom_CRMS(self, arg2, arg3):
        return _py_scream_ee.Protein_sc_atom_CRMS(self, arg2, arg3)

    def fix_entire_atom_list_ordering(self):
        return _py_scream_ee.Protein_fix_entire_atom_list_ordering(self)

    def fix_toggle(self, arg2):
        return _py_scream_ee.Protein_fix_toggle(self, arg2)

    def fix_sc_toggle(self, arg2, arg3, arg4):
        return _py_scream_ee.Protein_fix_sc_toggle(self, arg2, arg3, arg4)

    def append_to_filehandle(self, arg2):
        return _py_scream_ee.Protein_append_to_filehandle(self, arg2)

    def pdb_append_to_filehandle(self, arg2):
        return _py_scream_ee.Protein_pdb_append_to_filehandle(self, arg2)

    def print_bgf_file(self, arg2):
        return _py_scream_ee.Protein_print_bgf_file(self, arg2)

    def print_Me(self):
        return _py_scream_ee.Protein_print_Me(self)

    def print_ordered_by_n(self):
        return _py_scream_ee.Protein_print_ordered_by_n(self)

# Register Protein in _py_scream_ee:
_py_scream_ee.Protein_swigregister(Protein)
class Rotlib(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _py_scream_ee.Rotlib_swiginit(self, _py_scream_ee.new_Rotlib(*args))
    __swig_destroy__ = _py_scream_ee.delete_Rotlib

    def readConnectivityFile(self, arg2):
        return _py_scream_ee.Rotlib_readConnectivityFile(self, arg2)

    def readRotamerLibrary(self, arg2):
        return _py_scream_ee.Rotlib_readRotamerLibrary(self, arg2)

    def get_library_name(self):
        return _py_scream_ee.Rotlib_get_library_name(self)

    def getRotConnInfo(self):
        return _py_scream_ee.Rotlib_getRotConnInfo(self)

    def get_next_rot(self):
        return _py_scream_ee.Rotlib_get_next_rot(self)

    def get_current_rot(self):
        return _py_scream_ee.Rotlib_get_current_rot(self)

    def get_next_rot_with_empty_lattice_E_below(self, arg2):
        return _py_scream_ee.Rotlib_get_next_rot_with_empty_lattice_E_below(self, arg2)

    def get_empty_lattice_E_rot(self, arg2):
        return _py_scream_ee.Rotlib_get_empty_lattice_E_rot(self, arg2)

    def get_empty_lattice_E_rot_after_sorted_by_empty_lattice_E(self, arg2):
        return _py_scream_ee.Rotlib_get_empty_lattice_E_rot_after_sorted_by_empty_lattice_E(self, arg2)

    def reset_pstn(self):
        return _py_scream_ee.Rotlib_reset_pstn(self)

    def size(self):
        return _py_scream_ee.Rotlib_size(self)

    def n_rotamers_below_empty_lattice_energy(self, E):
        return _py_scream_ee.Rotlib_n_rotamers_below_empty_lattice_energy(self, E)

    def add_rotamer(self, arg2):
        return _py_scream_ee.Rotlib_add_rotamer(self, arg2)

    def new_rotamer(self):
        return _py_scream_ee.Rotlib_new_rotamer(self)

    def new_rotamer_cluster(self):
        return _py_scream_ee.Rotlib_new_rotamer_cluster(self)

    def print_Me(self):
        return _py_scream_ee.Rotlib_print_Me(self)

    def print_to_file(self, arg2):
        return _py_scream_ee.Rotlib_print_to_file(self, arg2)

    def sort_by_rotlib_E(self):
        return _py_scream_ee.Rotlib_sort_by_rotlib_E(self)

    def sort_by_self_E(self):
        return _py_scream_ee.Rotlib_sort_by_self_E(self)

    def sort_by_empty_lattice_E(self):
        return _py_scream_ee.Rotlib_sort_by_empty_lattice_E(self)

    def get_best_preCalc_E(self):
        return _py_scream_ee.Rotlib_get_best_preCalc_E(self)

# Register Rotlib in _py_scream_ee:
_py_scream_ee.Rotlib_swigregister(Rotlib)
class AARotlib(Rotlib):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _py_scream_ee.AARotlib_swiginit(self, _py_scream_ee.new_AARotlib())
    __swig_destroy__ = _py_scream_ee.delete_AARotlib

    def get_next_rot(self):
        return _py_scream_ee.AARotlib_get_next_rot(self)

    def get_current_rot(self):
        return _py_scream_ee.AARotlib_get_current_rot(self)

    def get_rot(self, arg2):
        return _py_scream_ee.AARotlib_get_rot(self, arg2)

    def reset_rot_pstn(self):
        return _py_scream_ee.AARotlib_reset_rot_pstn(self)

    def set_rot_pstn(self, arg2):
        return _py_scream_ee.AARotlib_set_rot_pstn(self, arg2)

    def get_next_rot_with_empty_lattice_E_below(self, arg2):
        return _py_scream_ee.AARotlib_get_next_rot_with_empty_lattice_E_below(self, arg2)

    def get_empty_lattice_E_rot(self, arg2):
        return _py_scream_ee.AARotlib_get_empty_lattice_E_rot(self, arg2)

    def center_CA(self):
        return _py_scream_ee.AARotlib_center_CA(self)

    def calc_all_PHI(self):
        return _py_scream_ee.AARotlib_calc_all_PHI(self)

    def calc_all_PSI(self):
        return _py_scream_ee.AARotlib_calc_all_PSI(self)
    resName = property(_py_scream_ee.AARotlib_resName_get, _py_scream_ee.AARotlib_resName_set)

# Register AARotlib in _py_scream_ee:
_py_scream_ee.AARotlib_swigregister(AARotlib)
class NtrlAARotlib(AARotlib):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _py_scream_ee.NtrlAARotlib_swiginit(self, _py_scream_ee.new_NtrlAARotlib(*args))

    def setup_library(self):
        return _py_scream_ee.NtrlAARotlib_setup_library(self)
    __swig_destroy__ = _py_scream_ee.delete_NtrlAARotlib

    def assign_atom_fftype(self):
        return _py_scream_ee.NtrlAARotlib_assign_atom_fftype(self)

    def assign_charges(self, arg2):
        return _py_scream_ee.NtrlAARotlib_assign_charges(self, arg2)

    def assign_lone_pair(self):
        return _py_scream_ee.NtrlAARotlib_assign_lone_pair(self)

    def append_to_filehandle(self, arg2):
        return _py_scream_ee.NtrlAARotlib_append_to_filehandle(self, arg2)

# Register NtrlAARotlib in _py_scream_ee:
_py_scream_ee.NtrlAARotlib_swigregister(NtrlAARotlib)
class Multiple_NtrlAARotlib(NtrlAARotlib):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _py_scream_ee.Multiple_NtrlAARotlib_swiginit(self, _py_scream_ee.new_Multiple_NtrlAARotlib(*args))
    __swig_destroy__ = _py_scream_ee.delete_Multiple_NtrlAARotlib

    def getRotConnInfo(self):
        return _py_scream_ee.Multiple_NtrlAARotlib_getRotConnInfo(self)

    def add_library(self, *args):
        return _py_scream_ee.Multiple_NtrlAARotlib_add_library(self, *args)

# Register Multiple_NtrlAARotlib in _py_scream_ee:
_py_scream_ee.Multiple_NtrlAARotlib_swigregister(Multiple_NtrlAARotlib)
class HIS_NtrlAARotlib(NtrlAARotlib):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _py_scream_ee.HIS_NtrlAARotlib_swiginit(self, _py_scream_ee.new_HIS_NtrlAARotlib(*args))
    __swig_destroy__ = _py_scream_ee.delete_HIS_NtrlAARotlib

    def add_rotamer(self, arg2):
        return _py_scream_ee.HIS_NtrlAARotlib_add_rotamer(self, arg2)

# Register HIS_NtrlAARotlib in _py_scream_ee:
_py_scream_ee.HIS_NtrlAARotlib_swigregister(HIS_NtrlAARotlib)
class RotlibCollection(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _py_scream_ee.RotlibCollection_swiginit(self, _py_scream_ee.new_RotlibCollection())
    __swig_destroy__ = _py_scream_ee.delete_RotlibCollection

    def addRotlib(self, arg2, arg3):
        return _py_scream_ee.RotlibCollection_addRotlib(self, arg2, arg3)

    def addClashCollection(self, arg2):
        return _py_scream_ee.RotlibCollection_addClashCollection(self, arg2)

    def initEmptyLatticeDataStructures(self):
        return _py_scream_ee.RotlibCollection_initEmptyLatticeDataStructures(self)

    def initDynamicMemoryDataStructures(self):
        return _py_scream_ee.RotlibCollection_initDynamicMemoryDataStructures(self)

    def initAllocationUnderEnergyThreshold(self, arg2):
        return _py_scream_ee.RotlibCollection_initAllocationUnderEnergyThreshold(self, arg2)

    def getNextRotamersByELEnergy(self):
        return _py_scream_ee.RotlibCollection_getNextRotamersByELEnergy(self)

    def resetEmptyLatticeCrntPstn(self):
        return _py_scream_ee.RotlibCollection_resetEmptyLatticeCrntPstn(self)

    def resetTotalEnergyCrntPstn(self):
        return _py_scream_ee.RotlibCollection_resetTotalEnergyCrntPstn(self)

    def getNextEmptyLatticeExcitationRotamers(self):
        return _py_scream_ee.RotlibCollection_getNextEmptyLatticeExcitationRotamers(self)

    def getNextTotalEnergyExcitationRotamers(self):
        return _py_scream_ee.RotlibCollection_getNextTotalEnergyExcitationRotamers(self)

    def getNthEmptyLatticeExcitationRotamers(self):
        return _py_scream_ee.RotlibCollection_getNthEmptyLatticeExcitationRotamers(self)

    def getELExcitedRotamerFromEnumeration(self, arg2):
        return _py_scream_ee.RotlibCollection_getELExcitedRotamerFromEnumeration(self, arg2)

    def getELExcitedRotamer_nFromEnumeration_n(self, arg2):
        return _py_scream_ee.RotlibCollection_getELExcitedRotamer_nFromEnumeration_n(self, arg2)

    def getELEnumerationFromExcitedRotamer(self, arg2):
        return _py_scream_ee.RotlibCollection_getELEnumerationFromExcitedRotamer(self, arg2)

    def getELEnumeration_nFromExcitedRotamer_n(self, arg2):
        return _py_scream_ee.RotlibCollection_getELEnumeration_nFromExcitedRotamer_n(self, arg2)

    def _ExcitationEnumerationToExcitationEnumeration_n(self, arg2):
        return _py_scream_ee.RotlibCollection__ExcitationEnumerationToExcitationEnumeration_n(self, arg2)

    def _ExcitedRotamers_nToExcitedRotamers(self, arg2):
        return _py_scream_ee.RotlibCollection__ExcitedRotamers_nToExcitedRotamers(self, arg2)

    def getClashCollection(self):
        return _py_scream_ee.RotlibCollection_getClashCollection(self)

    def cleanClashCollection(self):
        return _py_scream_ee.RotlibCollection_cleanClashCollection(self)

    def getMutInfoRotlibMap(self):
        return _py_scream_ee.RotlibCollection_getMutInfoRotlibMap(self)

    def getMutInfoRotlibDict(self):
        return _py_scream_ee.RotlibCollection_getMutInfoRotlibDict(self)

    def getNextDynamicMemoryRotamers_And_Expand(self):
        return _py_scream_ee.RotlibCollection_getNextDynamicMemoryRotamers_And_Expand(self)

    def getNextDynamicClashEliminatedRotamers_And_Expand(self):
        return _py_scream_ee.RotlibCollection_getNextDynamicClashEliminatedRotamers_And_Expand(self)

    def increaseConfigurationsUnderEnergyThreshold(self, arg2):
        return _py_scream_ee.RotlibCollection_increaseConfigurationsUnderEnergyThreshold(self, arg2)

    def getNextUnderEnergyThresholdRotamers(self):
        return _py_scream_ee.RotlibCollection_getNextUnderEnergyThresholdRotamers(self)

    def setExcitationEnergy(self, arg2, arg3):
        return _py_scream_ee.RotlibCollection_setExcitationEnergy(self, arg2, arg3)

    def getExcitationEnergy(self, EE):
        return _py_scream_ee.RotlibCollection_getExcitationEnergy(self, EE)

    def printEmptyLatticeLinearEnergyTable(self):
        return _py_scream_ee.RotlibCollection_printEmptyLatticeLinearEnergyTable(self)

    def printExcitationEnergyTable(self, *args):
        return _py_scream_ee.RotlibCollection_printExcitationEnergyTable(self, *args)

    def printEmptyLatticeTable(self):
        return _py_scream_ee.RotlibCollection_printEmptyLatticeTable(self)

    def getInitMethod(self):
        return _py_scream_ee.RotlibCollection_getInitMethod(self)

    def sizeOfSystem(self):
        return _py_scream_ee.RotlibCollection_sizeOfSystem(self)

    def getHighestAllowedRotamerE(self):
        return _py_scream_ee.RotlibCollection_getHighestAllowedRotamerE(self)

    def setHighestAllowedRotamerE(self, E):
        return _py_scream_ee.RotlibCollection_setHighestAllowedRotamerE(self, E)
    maxRotamerConfigurations = property(_py_scream_ee.RotlibCollection_maxRotamerConfigurations_get, _py_scream_ee.RotlibCollection_maxRotamerConfigurations_set)

    def cmpMaxRotamerConfigurations(self, arg2):
        return _py_scream_ee.RotlibCollection_cmpMaxRotamerConfigurations(self, arg2)

# Register RotlibCollection in _py_scream_ee:
_py_scream_ee.RotlibCollection_swigregister(RotlibCollection)
class ClashCollection(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _py_scream_ee.ClashCollection_swiginit(self, _py_scream_ee.new_ClashCollection(*args))
    __swig_destroy__ = _py_scream_ee.delete_ClashCollection

    def setThresholdE(self, arg2):
        return _py_scream_ee.ClashCollection_setThresholdE(self, arg2)

    def addClashPair(self, *args):
        return _py_scream_ee.ClashCollection_addClashPair(self, *args)

    def checkClash(self, arg2):
        return _py_scream_ee.ClashCollection_checkClash(self, arg2)

    def getThresholdE(self):
        return _py_scream_ee.ClashCollection_getThresholdE(self)

    def getNumberOfClashes(self):
        return _py_scream_ee.ClashCollection_getNumberOfClashes(self)

    def storeCurrentRotamerConfiguration(self, arg2):
        return _py_scream_ee.ClashCollection_storeCurrentRotamerConfiguration(self, arg2)

    def increment_total_clashing_rotamers_eliminated(self):
        return _py_scream_ee.ClashCollection_increment_total_clashing_rotamers_eliminated(self)

    def set_total_clashing_rotamers_eliminated(self, arg2):
        return _py_scream_ee.ClashCollection_set_total_clashing_rotamers_eliminated(self, arg2)

    def get_total_clashing_rotamers_eliminated(self):
        return _py_scream_ee.ClashCollection_get_total_clashing_rotamers_eliminated(self)

    def getClashList(self):
        return _py_scream_ee.ClashCollection_getClashList(self)

    def getDiscreteClashPairList(self):
        return _py_scream_ee.ClashCollection_getDiscreteClashPairList(self)

# Register ClashCollection in _py_scream_ee:
_py_scream_ee.ClashCollection_swigregister(ClashCollection)
class RotamerNeighborList(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _py_scream_ee.RotamerNeighborList_swiginit(self, _py_scream_ee.new_RotamerNeighborList(*args))

    def setCutoff(self, cutoff):
        return _py_scream_ee.RotamerNeighborList_setCutoff(self, cutoff)

    def getCutoff(self):
        return _py_scream_ee.RotamerNeighborList_getCutoff(self)

    def setProtein(self, arg2):
        return _py_scream_ee.RotamerNeighborList_setProtein(self, arg2)

    def getProtein(self):
        return _py_scream_ee.RotamerNeighborList_getProtein(self)

    def addMutInfoRotConnInfo(self, arg2, arg3=None):
        return _py_scream_ee.RotamerNeighborList_addMutInfoRotConnInfo(self, arg2, arg3)

    def initRotamerNeighborList(self):
        return _py_scream_ee.RotamerNeighborList_initRotamerNeighborList(self)

    def returnEmptyLatticeNeighborList(self, arg2):
        return _py_scream_ee.RotamerNeighborList_returnEmptyLatticeNeighborList(self, arg2)
    __swig_destroy__ = _py_scream_ee.delete_RotamerNeighborList

# Register RotamerNeighborList in _py_scream_ee:
_py_scream_ee.RotamerNeighborList_swigregister(RotamerNeighborList)
class RotamerCluster(Rotamer):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _py_scream_ee.RotamerCluster_swiginit(self, _py_scream_ee.new_RotamerCluster(*args))
    __swig_destroy__ = _py_scream_ee.delete_RotamerCluster

    def addRotamerCluster(self, arg2):
        return _py_scream_ee.RotamerCluster_addRotamerCluster(self, arg2)

    def getAllRotamers(self):
        return _py_scream_ee.RotamerCluster_getAllRotamers(self)

    def print_Me(self):
        return _py_scream_ee.RotamerCluster_print_Me(self)

    def append_to_filehandle(self, arg2):
        return _py_scream_ee.RotamerCluster_append_to_filehandle(self, arg2)

    def pdb_append_to_filehandle(self, arg2):
        return _py_scream_ee.RotamerCluster_pdb_append_to_filehandle(self, arg2)

    def append_to_ostream_connect_info(self, arg2):
        return _py_scream_ee.RotamerCluster_append_to_ostream_connect_info(self, arg2)

    def get_sc_atoms(self):
        return _py_scream_ee.RotamerCluster_get_sc_atoms(self)

    def get_bb_atoms(self):
        return _py_scream_ee.RotamerCluster_get_bb_atoms(self)

# Register RotamerCluster in _py_scream_ee:
_py_scream_ee.RotamerCluster_swigregister(RotamerCluster)
class RotConnInfo(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    targetRotamerLibFile = property(_py_scream_ee.RotConnInfo_targetRotamerLibFile_get, _py_scream_ee.RotConnInfo_targetRotamerLibFile_set)
    anchor_pts = property(_py_scream_ee.RotConnInfo_anchor_pts_get, _py_scream_ee.RotConnInfo_anchor_pts_set)
    atoms_of_exact_match = property(_py_scream_ee.RotConnInfo_atoms_of_exact_match_get, _py_scream_ee.RotConnInfo_atoms_of_exact_match_set)
    atom_n_map = property(_py_scream_ee.RotConnInfo_atom_n_map_get, _py_scream_ee.RotConnInfo_atom_n_map_set)
    atom_n_label_map = property(_py_scream_ee.RotConnInfo_atom_n_label_map_get, _py_scream_ee.RotConnInfo_atom_n_label_map_set)
    side_chain_atoms = property(_py_scream_ee.RotConnInfo_side_chain_atoms_get, _py_scream_ee.RotConnInfo_side_chain_atoms_set)
    atom_connectivity_info = property(_py_scream_ee.RotConnInfo_atom_connectivity_info_get, _py_scream_ee.RotConnInfo_atom_connectivity_info_set)
    connection_point_atoms = property(_py_scream_ee.RotConnInfo_connection_point_atoms_get, _py_scream_ee.RotConnInfo_connection_point_atoms_set)

    def modifyMappingInProteinAtoms(self, arg2):
        return _py_scream_ee.RotConnInfo_modifyMappingInProteinAtoms(self, arg2)

    def clear(self):
        return _py_scream_ee.RotConnInfo_clear(self)

    def __init__(self):
        _py_scream_ee.RotConnInfo_swiginit(self, _py_scream_ee.new_RotConnInfo())
    __swig_destroy__ = _py_scream_ee.delete_RotConnInfo

# Register RotConnInfo in _py_scream_ee:
_py_scream_ee.RotConnInfo_swigregister(RotConnInfo)
class bgf_handler(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _py_scream_ee.bgf_handler_swiginit(self, _py_scream_ee.new_bgf_handler(*args))
    __swig_destroy__ = _py_scream_ee.delete_bgf_handler

    def readfile(self, *args):
        return _py_scream_ee.bgf_handler_readfile(self, *args)

    def readPDB(self, *args):
        return _py_scream_ee.bgf_handler_readPDB(self, *args)

    def printToFile(self, *args):
        return _py_scream_ee.bgf_handler_printToFile(self, *args)

    def printfile(self, *args):
        return _py_scream_ee.bgf_handler_printfile(self, *args)

    def printPDB(self, arg2):
        return _py_scream_ee.bgf_handler_printPDB(self, arg2)

    def printToPDB(self, *args):
        return _py_scream_ee.bgf_handler_printToPDB(self, *args)

    def printSequenceToFile(self, arg2):
        return _py_scream_ee.bgf_handler_printSequenceToFile(self, arg2)

    def returnSequence(self):
        return _py_scream_ee.bgf_handler_returnSequence(self)

    @staticmethod
    def printSequence(arg1, arg2):
        return _py_scream_ee.bgf_handler_printSequence(arg1, arg2)

    def pass_atomlist(self, arg2):
        return _py_scream_ee.bgf_handler_pass_atomlist(self, arg2)

    def getAtomList(self):
        return _py_scream_ee.bgf_handler_getAtomList(self)
    atom_list = property(_py_scream_ee.bgf_handler_atom_list_get, _py_scream_ee.bgf_handler_atom_list_set)
    header_lines = property(_py_scream_ee.bgf_handler_header_lines_get, _py_scream_ee.bgf_handler_header_lines_set)
    atom_lines = property(_py_scream_ee.bgf_handler_atom_lines_get, _py_scream_ee.bgf_handler_atom_lines_set)
    conect_format_lines = property(_py_scream_ee.bgf_handler_conect_format_lines_get, _py_scream_ee.bgf_handler_conect_format_lines_set)
    connectivity_record_lines = property(_py_scream_ee.bgf_handler_connectivity_record_lines_get, _py_scream_ee.bgf_handler_connectivity_record_lines_set)

# Register bgf_handler in _py_scream_ee:
_py_scream_ee.bgf_handler_swigregister(bgf_handler)
class AminoAcid_RTF(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _py_scream_ee.AminoAcid_RTF_swiginit(self, _py_scream_ee.new_AminoAcid_RTF(*args))
    __swig_destroy__ = _py_scream_ee.delete_AminoAcid_RTF

    def get_ff_type(self, arg2):
        return _py_scream_ee.AminoAcid_RTF_get_ff_type(self, arg2)

    def return_bonds_table(self):
        return _py_scream_ee.AminoAcid_RTF_return_bonds_table(self)

# Register AminoAcid_RTF in _py_scream_ee:
_py_scream_ee.AminoAcid_RTF_swigregister(AminoAcid_RTF)
class SCREAM_RTF(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _py_scream_ee.SCREAM_RTF_swiginit(self, _py_scream_ee.new_SCREAM_RTF(*args))
    __swig_destroy__ = _py_scream_ee.delete_SCREAM_RTF

    def get_AminoAcid_RTF(self, arg2):
        return _py_scream_ee.SCREAM_RTF_get_AminoAcid_RTF(self, arg2)

    def get_ff_type(self, arg2, arg3):
        return _py_scream_ee.SCREAM_RTF_get_ff_type(self, arg2, arg3)

# Register SCREAM_RTF in _py_scream_ee:
_py_scream_ee.SCREAM_RTF_swigregister(SCREAM_RTF)
class Scream_EE(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _py_scream_ee.Scream_EE_swiginit(self, _py_scream_ee.new_Scream_EE())
    __swig_destroy__ = _py_scream_ee.delete_Scream_EE

    def init(self, arg2, arg3, arg4, arg5):
        return _py_scream_ee.Scream_EE_init(self, arg2, arg3, arg4, arg5)

    def setCalcNonPolarHydrogen_flag(self, flag):
        return _py_scream_ee.Scream_EE_setCalcNonPolarHydrogen_flag(self, flag)

    def getCalcNonPolarHydrogen_flag(self):
        return _py_scream_ee.Scream_EE_getCalcNonPolarHydrogen_flag(self)

    def addMutInfoRotConnInfo(self, arg2, arg3=None):
        return _py_scream_ee.Scream_EE_addMutInfoRotConnInfo(self, arg2, arg3)

    def init_after_addedMutInfoRotConnInfo(self, arg2, arg3):
        return _py_scream_ee.Scream_EE_init_after_addedMutInfoRotConnInfo(self, arg2, arg3)

    def init_after_addedMutInfoRotConnInfo_on_the_fly_E(self, arg2, arg3):
        return _py_scream_ee.Scream_EE_init_after_addedMutInfoRotConnInfo_on_the_fly_E(self, arg2, arg3)

    def init_after_addedMutInfoRotConnInfo_neighbor_list(self, arg2, arg3):
        return _py_scream_ee.Scream_EE_init_after_addedMutInfoRotConnInfo_neighbor_list(self, arg2, arg3)

    def fix_mutInfo(self, arg2, arg3=None, arg4=0):
        return _py_scream_ee.Scream_EE_fix_mutInfo(self, arg2, arg3, arg4)

    def moveable_mutInfo(self, arg2, arg3=None, arg4=0):
        return _py_scream_ee.Scream_EE_moveable_mutInfo(self, arg2, arg3, arg4)

    def fix_all(self):
        return _py_scream_ee.Scream_EE_fix_all(self)

    def visible_mutInfo(self, arg2, arg3=None, arg4=0):
        return _py_scream_ee.Scream_EE_visible_mutInfo(self, arg2, arg3, arg4)

    def invisible_mutInfo(self, arg2, arg3=None, arg4=0):
        return _py_scream_ee.Scream_EE_invisible_mutInfo(self, arg2, arg3, arg4)

    def visible_EL_mutInfo(self, arg2, arg3=None, arg4=0):
        return _py_scream_ee.Scream_EE_visible_EL_mutInfo(self, arg2, arg3, arg4)

    def invisible_EL_mutInfo(self, arg2, arg3=None, arg4=0):
        return _py_scream_ee.Scream_EE_invisible_EL_mutInfo(self, arg2, arg3, arg4)

    def visible_all(self):
        return _py_scream_ee.Scream_EE_visible_all(self)

    def invisible_all(self):
        return _py_scream_ee.Scream_EE_invisible_all(self)

    def visible_EL_all(self):
        return _py_scream_ee.Scream_EE_visible_EL_all(self)

    def invisible_EL_all(self):
        return _py_scream_ee.Scream_EE_invisible_EL_all(self)

    def make_chain_invisible(self, arg2):
        return _py_scream_ee.Scream_EE_make_chain_invisible(self, arg2)

    def make_chain_EL_invisible(self, arg2):
        return _py_scream_ee.Scream_EE_make_chain_EL_invisible(self, arg2)

    def resetFlags(self, arg2=0):
        return _py_scream_ee.Scream_EE_resetFlags(self, arg2)

    def setup_variableAtomsOnEachSidechain(self):
        return _py_scream_ee.Scream_EE_setup_variableAtomsOnEachSidechain(self)

    def initScreamAtomDeltaValue(self, arg2, arg3, arg4, arg5):
        return _py_scream_ee.Scream_EE_initScreamAtomDeltaValue(self, arg2, arg3, arg4, arg5)

    def initScreamAtomVdwHbFields(self):
        return _py_scream_ee.Scream_EE_initScreamAtomVdwHbFields(self)

    def addClashCollection(self, arg2):
        return _py_scream_ee.Scream_EE_addClashCollection(self, arg2)

    def cleanClashCollection(self):
        return _py_scream_ee.Scream_EE_cleanClashCollection(self)

    def getDistanceDielectricPrefactor(self):
        return _py_scream_ee.Scream_EE_getDistanceDielectricPrefactor(self)

    def setDistanceDielectricPrefactor(self, arg2):
        return _py_scream_ee.Scream_EE_setDistanceDielectricPrefactor(self, arg2)

    def setNormalDielectric(self, arg2):
        return _py_scream_ee.Scream_EE_setNormalDielectric(self, arg2)

    def ntrlRotamerPlacement(self, arg2, arg3, arg4):
        return _py_scream_ee.Scream_EE_ntrlRotamerPlacement(self, arg2, arg3, arg4)
    coulomb_obj = property(_py_scream_ee.Scream_EE_coulomb_obj_get, _py_scream_ee.Scream_EE_coulomb_obj_set)
    vdw_obj = property(_py_scream_ee.Scream_EE_vdw_obj_get, _py_scream_ee.Scream_EE_vdw_obj_set)
    hb_obj = property(_py_scream_ee.Scream_EE_hb_obj_get, _py_scream_ee.Scream_EE_hb_obj_set)
    coulomb_EE = property(_py_scream_ee.Scream_EE_coulomb_EE_get, _py_scream_ee.Scream_EE_coulomb_EE_set)
    vdw_EE = property(_py_scream_ee.Scream_EE_vdw_EE_get, _py_scream_ee.Scream_EE_vdw_EE_set)
    hb_EE = property(_py_scream_ee.Scream_EE_hb_EE_get, _py_scream_ee.Scream_EE_hb_EE_set)
    vdw_hb_exclusion_EE = property(_py_scream_ee.Scream_EE_vdw_hb_exclusion_EE_get, _py_scream_ee.Scream_EE_vdw_hb_exclusion_EE_set)

    def calc_empty_lattice_E(self, arg2):
        return _py_scream_ee.Scream_EE_calc_empty_lattice_E(self, arg2)

    def calc_empty_lattice_E_full_delta(self, arg2, arg3):
        return _py_scream_ee.Scream_EE_calc_empty_lattice_E_full_delta(self, arg2, arg3)

    def calc_empty_lattice_E_flat_delta(self, arg2, arg3):
        return _py_scream_ee.Scream_EE_calc_empty_lattice_E_flat_delta(self, arg2, arg3)

    def calc_empty_lattice_E_scaled_inner_wall(self, arg2, arg3):
        return _py_scream_ee.Scream_EE_calc_empty_lattice_E_scaled_inner_wall(self, arg2, arg3)

    def calc_empty_lattice_coulomb_E_delta(self, arg2):
        return _py_scream_ee.Scream_EE_calc_empty_lattice_coulomb_E_delta(self, arg2)

    def calc_empty_lattice_vdw_E_delta(self, arg2, arg3, arg4):
        return _py_scream_ee.Scream_EE_calc_empty_lattice_vdw_E_delta(self, arg2, arg3, arg4)

    def calc_empty_lattice_hb_E_delta(self, arg2, arg3, arg4):
        return _py_scream_ee.Scream_EE_calc_empty_lattice_hb_E_delta(self, arg2, arg3, arg4)

    def calc_empty_lattice_vdw_hb_exclusion_E_delta(self, arg2, arg3, arg4):
        return _py_scream_ee.Scream_EE_calc_empty_lattice_vdw_hb_exclusion_E_delta(self, arg2, arg3, arg4)

    def calc_EL_vdw_rot_selfBB(self, arg2, arg3, arg4):
        return _py_scream_ee.Scream_EE_calc_EL_vdw_rot_selfBB(self, arg2, arg3, arg4)

    def calc_EL_vdw_rot_otherBB(self, arg2, arg3, arg4):
        return _py_scream_ee.Scream_EE_calc_EL_vdw_rot_otherBB(self, arg2, arg3, arg4)

    def calc_EL_vdw_rot_fixedSC(self, arg2, arg3, arg4):
        return _py_scream_ee.Scream_EE_calc_EL_vdw_rot_fixedSC(self, arg2, arg3, arg4)

    def calc_EL_vdw_rot_fixedHET(self, arg2, arg3, arg4):
        return _py_scream_ee.Scream_EE_calc_EL_vdw_rot_fixedHET(self, arg2, arg3, arg4)

    def calc_EL_vdw_rot_moveableHET(self, arg2, arg3, arg4):
        return _py_scream_ee.Scream_EE_calc_EL_vdw_rot_moveableHET(self, arg2, arg3, arg4)

    def calc_EL_coulomb_rot_selfBB(self, arg2):
        return _py_scream_ee.Scream_EE_calc_EL_coulomb_rot_selfBB(self, arg2)

    def calc_EL_coulomb_rot_otherBB(self, arg2):
        return _py_scream_ee.Scream_EE_calc_EL_coulomb_rot_otherBB(self, arg2)

    def calc_EL_coulomb_rot_fixedSC(self, arg2):
        return _py_scream_ee.Scream_EE_calc_EL_coulomb_rot_fixedSC(self, arg2)

    def calc_EL_coulomb_rot_fixedHET(self, arg2):
        return _py_scream_ee.Scream_EE_calc_EL_coulomb_rot_fixedHET(self, arg2)

    def calc_EL_coulomb_rot_moveableHET(self, arg2):
        return _py_scream_ee.Scream_EE_calc_EL_coulomb_rot_moveableHET(self, arg2)

    def calc_EL_hb_rot_selfBB(self, arg2, arg3, arg4):
        return _py_scream_ee.Scream_EE_calc_EL_hb_rot_selfBB(self, arg2, arg3, arg4)

    def calc_EL_hb_rot_otherBB(self, arg2, arg3, arg4):
        return _py_scream_ee.Scream_EE_calc_EL_hb_rot_otherBB(self, arg2, arg3, arg4)

    def calc_EL_hb_rot_fixedSC(self, arg2, arg3, arg4):
        return _py_scream_ee.Scream_EE_calc_EL_hb_rot_fixedSC(self, arg2, arg3, arg4)

    def calc_EL_hb_rot_fixedHET(self, arg2, arg3, arg4):
        return _py_scream_ee.Scream_EE_calc_EL_hb_rot_fixedHET(self, arg2, arg3, arg4)

    def calc_EL_hb_rot_moveableHET(self, arg2, arg3, arg4):
        return _py_scream_ee.Scream_EE_calc_EL_hb_rot_moveableHET(self, arg2, arg3, arg4)

    def calc_all_interaction_E(self):
        return _py_scream_ee.Scream_EE_calc_all_interaction_E(self)

    def calc_all_interaction_E_full_delta(self, arg2):
        return _py_scream_ee.Scream_EE_calc_all_interaction_E_full_delta(self, arg2)

    def calc_all_interaction_E_flat_delta(self, arg2):
        return _py_scream_ee.Scream_EE_calc_all_interaction_E_flat_delta(self, arg2)

    def calc_all_interaction_coulomb_E_delta(self):
        return _py_scream_ee.Scream_EE_calc_all_interaction_coulomb_E_delta(self)

    def calc_all_interaction_vdw_E_delta(self, arg2, arg3):
        return _py_scream_ee.Scream_EE_calc_all_interaction_vdw_E_delta(self, arg2, arg3)

    def calc_all_interaction_hb_E_delta(self, arg2, arg3):
        return _py_scream_ee.Scream_EE_calc_all_interaction_hb_E_delta(self, arg2, arg3)

    def calc_all_interaction_vdw_hb_exclusion_E_delta(self, arg2, arg3):
        return _py_scream_ee.Scream_EE_calc_all_interaction_vdw_hb_exclusion_E_delta(self, arg2, arg3)

    def calc_residue_interaction_E(self, *args):
        return _py_scream_ee.Scream_EE_calc_residue_interaction_E(self, *args)

    def calc_residue_interaction_vdw_E(self, arg2, arg3, arg4, arg5):
        return _py_scream_ee.Scream_EE_calc_residue_interaction_vdw_E(self, arg2, arg3, arg4, arg5)

    def calc_residue_interaction_hb_E(self, arg2, arg3, arg4, arg5):
        return _py_scream_ee.Scream_EE_calc_residue_interaction_hb_E(self, arg2, arg3, arg4, arg5)

    def calc_residue_interaction_coulumb_E(self, arg2, arg3):
        return _py_scream_ee.Scream_EE_calc_residue_interaction_coulumb_E(self, arg2, arg3)

    def setProtein(self, ptn):
        return _py_scream_ee.Scream_EE_setProtein(self, ptn)

    def getProtein(self):
        return _py_scream_ee.Scream_EE_getProtein(self)
    ptn = property(_py_scream_ee.Scream_EE_ptn_get, _py_scream_ee.Scream_EE_ptn_set)
    mutInfoV = property(_py_scream_ee.Scream_EE_mutInfoV_get, _py_scream_ee.Scream_EE_mutInfoV_set)

# Register Scream_EE in _py_scream_ee:
_py_scream_ee.Scream_EE_swigregister(Scream_EE)
class MutInfo(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _py_scream_ee.MutInfo_swiginit(self, _py_scream_ee.new_MutInfo(*args))
    __swig_destroy__ = _py_scream_ee.delete_MutInfo

    def init(self, arg2):
        return _py_scream_ee.MutInfo_init(self, arg2)

    def addMutInfo(self, *args):
        return _py_scream_ee.MutInfo_addMutInfo(self, *args)

    def __eq__(self, arg2):
        return _py_scream_ee.MutInfo___eq__(self, arg2)

    def __lt__(self, arg2):
        return _py_scream_ee.MutInfo___lt__(self, arg2)

    def getChn(self):
        return _py_scream_ee.MutInfo_getChn(self)

    def getPstn(self):
        return _py_scream_ee.MutInfo_getPstn(self)

    def getAA(self):
        return _py_scream_ee.MutInfo_getAA(self)
    chn = property(_py_scream_ee.MutInfo_chn_get, _py_scream_ee.MutInfo_chn_set)
    pstn = property(_py_scream_ee.MutInfo_pstn_get, _py_scream_ee.MutInfo_pstn_set)
    AA = property(_py_scream_ee.MutInfo_AA_get, _py_scream_ee.MutInfo_AA_set)
    str = property(_py_scream_ee.MutInfo_str_get, _py_scream_ee.MutInfo_str_set)
    mIInt = property(_py_scream_ee.MutInfo_mIInt_get, _py_scream_ee.MutInfo_mIInt_set)

    def print_Me(self):
        return _py_scream_ee.MutInfo_print_Me(self)

    def getString(self):
        return _py_scream_ee.MutInfo_getString(self)

    def getAllMutInfos(self):
        return _py_scream_ee.MutInfo_getAllMutInfos(self)

    def setIndex(self, i):
        return _py_scream_ee.MutInfo_setIndex(self, i)

    def getIndex(self):
        return _py_scream_ee.MutInfo_getIndex(self)

    def setRotConnInfo(self, rCI):
        return _py_scream_ee.MutInfo_setRotConnInfo(self, rCI)

    def getRotConnInfo(self):
        return _py_scream_ee.MutInfo_getRotConnInfo(self)

    def getMutInfoStringWithRotConnInfo(self):
        return _py_scream_ee.MutInfo_getMutInfoStringWithRotConnInfo(self)

    def searchAndAddRotConnInfo(self, arg2, arg3):
        return _py_scream_ee.MutInfo_searchAndAddRotConnInfo(self, arg2, arg3)

    def isClusterMutInfo(self):
        return _py_scream_ee.MutInfo_isClusterMutInfo(self)

# Register MutInfo in _py_scream_ee:
_py_scream_ee.MutInfo_swigregister(MutInfo)
class MutInfoPair(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _py_scream_ee.MutInfoPair_swiginit(self, _py_scream_ee.new_MutInfoPair(*args))
    __swig_destroy__ = _py_scream_ee.delete_MutInfoPair

    def init(self, arg2, arg3):
        return _py_scream_ee.MutInfoPair_init(self, arg2, arg3)

    def __eq__(self, arg2):
        return _py_scream_ee.MutInfoPair___eq__(self, arg2)

    def __lt__(self, arg2):
        return _py_scream_ee.MutInfoPair___lt__(self, arg2)

    def getString(self):
        return _py_scream_ee.MutInfoPair_getString(self)
    mutInfo1 = property(_py_scream_ee.MutInfoPair_mutInfo1_get, _py_scream_ee.MutInfoPair_mutInfo1_set)
    mutInfo2 = property(_py_scream_ee.MutInfoPair_mutInfo2_get, _py_scream_ee.MutInfoPair_mutInfo2_set)

    def getMutInfo1(self):
        return _py_scream_ee.MutInfoPair_getMutInfo1(self)

    def getMutInfo2(self):
        return _py_scream_ee.MutInfoPair_getMutInfo2(self)

    def setClashE(self, E):
        return _py_scream_ee.MutInfoPair_setClashE(self, E)

    def getClashE(self):
        return _py_scream_ee.MutInfoPair_getClashE(self)

# Register MutInfoPair in _py_scream_ee:
_py_scream_ee.MutInfoPair_swigregister(MutInfoPair)
class ConnectivityMap(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        return _py_scream_ee.ConnectivityMap_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _py_scream_ee.ConnectivityMap___nonzero__(self)

    def __bool__(self):
        return _py_scream_ee.ConnectivityMap___bool__(self)

    def __len__(self):
        return _py_scream_ee.ConnectivityMap___len__(self)
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __getitem__(self, key):
        return _py_scream_ee.ConnectivityMap___getitem__(self, key)

    def __delitem__(self, key):
        return _py_scream_ee.ConnectivityMap___delitem__(self, key)

    def has_key(self, key):
        return _py_scream_ee.ConnectivityMap_has_key(self, key)

    def keys(self):
        return _py_scream_ee.ConnectivityMap_keys(self)

    def values(self):
        return _py_scream_ee.ConnectivityMap_values(self)

    def items(self):
        return _py_scream_ee.ConnectivityMap_items(self)

    def __contains__(self, key):
        return _py_scream_ee.ConnectivityMap___contains__(self, key)

    def key_iterator(self):
        return _py_scream_ee.ConnectivityMap_key_iterator(self)

    def value_iterator(self):
        return _py_scream_ee.ConnectivityMap_value_iterator(self)

    def __setitem__(self, *args):
        return _py_scream_ee.ConnectivityMap___setitem__(self, *args)

    def asdict(self):
        return _py_scream_ee.ConnectivityMap_asdict(self)

    def __init__(self, *args):
        _py_scream_ee.ConnectivityMap_swiginit(self, _py_scream_ee.new_ConnectivityMap(*args))

    def empty(self):
        return _py_scream_ee.ConnectivityMap_empty(self)

    def size(self):
        return _py_scream_ee.ConnectivityMap_size(self)

    def swap(self, v):
        return _py_scream_ee.ConnectivityMap_swap(self, v)

    def begin(self):
        return _py_scream_ee.ConnectivityMap_begin(self)

    def end(self):
        return _py_scream_ee.ConnectivityMap_end(self)

    def rbegin(self):
        return _py_scream_ee.ConnectivityMap_rbegin(self)

    def rend(self):
        return _py_scream_ee.ConnectivityMap_rend(self)

    def clear(self):
        return _py_scream_ee.ConnectivityMap_clear(self)

    def get_allocator(self):
        return _py_scream_ee.ConnectivityMap_get_allocator(self)

    def count(self, x):
        return _py_scream_ee.ConnectivityMap_count(self, x)

    def erase(self, *args):
        return _py_scream_ee.ConnectivityMap_erase(self, *args)

    def find(self, x):
        return _py_scream_ee.ConnectivityMap_find(self, x)

    def lower_bound(self, x):
        return _py_scream_ee.ConnectivityMap_lower_bound(self, x)

    def upper_bound(self, x):
        return _py_scream_ee.ConnectivityMap_upper_bound(self, x)
    __swig_destroy__ = _py_scream_ee.delete_ConnectivityMap

# Register ConnectivityMap in _py_scream_ee:
_py_scream_ee.ConnectivityMap_swigregister(ConnectivityMap)
class stringV(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        return _py_scream_ee.stringV_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _py_scream_ee.stringV___nonzero__(self)

    def __bool__(self):
        return _py_scream_ee.stringV___bool__(self)

    def __len__(self):
        return _py_scream_ee.stringV___len__(self)

    def __getslice__(self, i, j):
        return _py_scream_ee.stringV___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _py_scream_ee.stringV___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _py_scream_ee.stringV___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _py_scream_ee.stringV___delitem__(self, *args)

    def __getitem__(self, *args):
        return _py_scream_ee.stringV___getitem__(self, *args)

    def __setitem__(self, *args):
        return _py_scream_ee.stringV___setitem__(self, *args)

    def pop(self):
        return _py_scream_ee.stringV_pop(self)

    def append(self, x):
        return _py_scream_ee.stringV_append(self, x)

    def empty(self):
        return _py_scream_ee.stringV_empty(self)

    def size(self):
        return _py_scream_ee.stringV_size(self)

    def swap(self, v):
        return _py_scream_ee.stringV_swap(self, v)

    def begin(self):
        return _py_scream_ee.stringV_begin(self)

    def end(self):
        return _py_scream_ee.stringV_end(self)

    def rbegin(self):
        return _py_scream_ee.stringV_rbegin(self)

    def rend(self):
        return _py_scream_ee.stringV_rend(self)

    def clear(self):
        return _py_scream_ee.stringV_clear(self)

    def get_allocator(self):
        return _py_scream_ee.stringV_get_allocator(self)

    def pop_back(self):
        return _py_scream_ee.stringV_pop_back(self)

    def erase(self, *args):
        return _py_scream_ee.stringV_erase(self, *args)

    def __init__(self, *args):
        _py_scream_ee.stringV_swiginit(self, _py_scream_ee.new_stringV(*args))

    def push_back(self, x):
        return _py_scream_ee.stringV_push_back(self, x)

    def front(self):
        return _py_scream_ee.stringV_front(self)

    def back(self):
        return _py_scream_ee.stringV_back(self)

    def assign(self, n, x):
        return _py_scream_ee.stringV_assign(self, n, x)

    def resize(self, *args):
        return _py_scream_ee.stringV_resize(self, *args)

    def insert(self, *args):
        return _py_scream_ee.stringV_insert(self, *args)

    def reserve(self, n):
        return _py_scream_ee.stringV_reserve(self, n)

    def capacity(self):
        return _py_scream_ee.stringV_capacity(self)
    __swig_destroy__ = _py_scream_ee.delete_stringV

# Register stringV in _py_scream_ee:
_py_scream_ee.stringV_swigregister(stringV)
class ExcitationEnumeration(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        return _py_scream_ee.ExcitationEnumeration_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _py_scream_ee.ExcitationEnumeration___nonzero__(self)

    def __bool__(self):
        return _py_scream_ee.ExcitationEnumeration___bool__(self)

    def __len__(self):
        return _py_scream_ee.ExcitationEnumeration___len__(self)
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __getitem__(self, key):
        return _py_scream_ee.ExcitationEnumeration___getitem__(self, key)

    def __delitem__(self, key):
        return _py_scream_ee.ExcitationEnumeration___delitem__(self, key)

    def has_key(self, key):
        return _py_scream_ee.ExcitationEnumeration_has_key(self, key)

    def keys(self):
        return _py_scream_ee.ExcitationEnumeration_keys(self)

    def values(self):
        return _py_scream_ee.ExcitationEnumeration_values(self)

    def items(self):
        return _py_scream_ee.ExcitationEnumeration_items(self)

    def __contains__(self, key):
        return _py_scream_ee.ExcitationEnumeration___contains__(self, key)

    def key_iterator(self):
        return _py_scream_ee.ExcitationEnumeration_key_iterator(self)

    def value_iterator(self):
        return _py_scream_ee.ExcitationEnumeration_value_iterator(self)

    def __setitem__(self, *args):
        return _py_scream_ee.ExcitationEnumeration___setitem__(self, *args)

    def asdict(self):
        return _py_scream_ee.ExcitationEnumeration_asdict(self)

    def __init__(self, *args):
        _py_scream_ee.ExcitationEnumeration_swiginit(self, _py_scream_ee.new_ExcitationEnumeration(*args))

    def empty(self):
        return _py_scream_ee.ExcitationEnumeration_empty(self)

    def size(self):
        return _py_scream_ee.ExcitationEnumeration_size(self)

    def swap(self, v):
        return _py_scream_ee.ExcitationEnumeration_swap(self, v)

    def begin(self):
        return _py_scream_ee.ExcitationEnumeration_begin(self)

    def end(self):
        return _py_scream_ee.ExcitationEnumeration_end(self)

    def rbegin(self):
        return _py_scream_ee.ExcitationEnumeration_rbegin(self)

    def rend(self):
        return _py_scream_ee.ExcitationEnumeration_rend(self)

    def clear(self):
        return _py_scream_ee.ExcitationEnumeration_clear(self)

    def get_allocator(self):
        return _py_scream_ee.ExcitationEnumeration_get_allocator(self)

    def count(self, x):
        return _py_scream_ee.ExcitationEnumeration_count(self, x)

    def erase(self, *args):
        return _py_scream_ee.ExcitationEnumeration_erase(self, *args)

    def find(self, x):
        return _py_scream_ee.ExcitationEnumeration_find(self, x)

    def lower_bound(self, x):
        return _py_scream_ee.ExcitationEnumeration_lower_bound(self, x)

    def upper_bound(self, x):
        return _py_scream_ee.ExcitationEnumeration_upper_bound(self, x)
    __swig_destroy__ = _py_scream_ee.delete_ExcitationEnumeration

# Register ExcitationEnumeration in _py_scream_ee:
_py_scream_ee.ExcitationEnumeration_swigregister(ExcitationEnumeration)
class ExcitedRotamers(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        return _py_scream_ee.ExcitedRotamers_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _py_scream_ee.ExcitedRotamers___nonzero__(self)

    def __bool__(self):
        return _py_scream_ee.ExcitedRotamers___bool__(self)

    def __len__(self):
        return _py_scream_ee.ExcitedRotamers___len__(self)
    def __iter__(self):
        return self.key_iterator()
    def iterkeys(self):
        return self.key_iterator()
    def itervalues(self):
        return self.value_iterator()
    def iteritems(self):
        return self.iterator()

    def __getitem__(self, key):
        return _py_scream_ee.ExcitedRotamers___getitem__(self, key)

    def __delitem__(self, key):
        return _py_scream_ee.ExcitedRotamers___delitem__(self, key)

    def has_key(self, key):
        return _py_scream_ee.ExcitedRotamers_has_key(self, key)

    def keys(self):
        return _py_scream_ee.ExcitedRotamers_keys(self)

    def values(self):
        return _py_scream_ee.ExcitedRotamers_values(self)

    def items(self):
        return _py_scream_ee.ExcitedRotamers_items(self)

    def __contains__(self, key):
        return _py_scream_ee.ExcitedRotamers___contains__(self, key)

    def key_iterator(self):
        return _py_scream_ee.ExcitedRotamers_key_iterator(self)

    def value_iterator(self):
        return _py_scream_ee.ExcitedRotamers_value_iterator(self)

    def __setitem__(self, *args):
        return _py_scream_ee.ExcitedRotamers___setitem__(self, *args)

    def asdict(self):
        return _py_scream_ee.ExcitedRotamers_asdict(self)

    def __init__(self, *args):
        _py_scream_ee.ExcitedRotamers_swiginit(self, _py_scream_ee.new_ExcitedRotamers(*args))

    def empty(self):
        return _py_scream_ee.ExcitedRotamers_empty(self)

    def size(self):
        return _py_scream_ee.ExcitedRotamers_size(self)

    def swap(self, v):
        return _py_scream_ee.ExcitedRotamers_swap(self, v)

    def begin(self):
        return _py_scream_ee.ExcitedRotamers_begin(self)

    def end(self):
        return _py_scream_ee.ExcitedRotamers_end(self)

    def rbegin(self):
        return _py_scream_ee.ExcitedRotamers_rbegin(self)

    def rend(self):
        return _py_scream_ee.ExcitedRotamers_rend(self)

    def clear(self):
        return _py_scream_ee.ExcitedRotamers_clear(self)

    def get_allocator(self):
        return _py_scream_ee.ExcitedRotamers_get_allocator(self)

    def count(self, x):
        return _py_scream_ee.ExcitedRotamers_count(self, x)

    def erase(self, *args):
        return _py_scream_ee.ExcitedRotamers_erase(self, *args)

    def find(self, x):
        return _py_scream_ee.ExcitedRotamers_find(self, x)

    def lower_bound(self, x):
        return _py_scream_ee.ExcitedRotamers_lower_bound(self, x)

    def upper_bound(self, x):
        return _py_scream_ee.ExcitedRotamers_upper_bound(self, x)
    __swig_destroy__ = _py_scream_ee.delete_ExcitedRotamers

# Register ExcitedRotamers in _py_scream_ee:
_py_scream_ee.ExcitedRotamers_swigregister(ExcitedRotamers)
class RotamerV(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        return _py_scream_ee.RotamerV_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _py_scream_ee.RotamerV___nonzero__(self)

    def __bool__(self):
        return _py_scream_ee.RotamerV___bool__(self)

    def __len__(self):
        return _py_scream_ee.RotamerV___len__(self)

    def __getslice__(self, i, j):
        return _py_scream_ee.RotamerV___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _py_scream_ee.RotamerV___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _py_scream_ee.RotamerV___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _py_scream_ee.RotamerV___delitem__(self, *args)

    def __getitem__(self, *args):
        return _py_scream_ee.RotamerV___getitem__(self, *args)

    def __setitem__(self, *args):
        return _py_scream_ee.RotamerV___setitem__(self, *args)

    def pop(self):
        return _py_scream_ee.RotamerV_pop(self)

    def append(self, x):
        return _py_scream_ee.RotamerV_append(self, x)

    def empty(self):
        return _py_scream_ee.RotamerV_empty(self)

    def size(self):
        return _py_scream_ee.RotamerV_size(self)

    def swap(self, v):
        return _py_scream_ee.RotamerV_swap(self, v)

    def begin(self):
        return _py_scream_ee.RotamerV_begin(self)

    def end(self):
        return _py_scream_ee.RotamerV_end(self)

    def rbegin(self):
        return _py_scream_ee.RotamerV_rbegin(self)

    def rend(self):
        return _py_scream_ee.RotamerV_rend(self)

    def clear(self):
        return _py_scream_ee.RotamerV_clear(self)

    def get_allocator(self):
        return _py_scream_ee.RotamerV_get_allocator(self)

    def pop_back(self):
        return _py_scream_ee.RotamerV_pop_back(self)

    def erase(self, *args):
        return _py_scream_ee.RotamerV_erase(self, *args)

    def __init__(self, *args):
        _py_scream_ee.RotamerV_swiginit(self, _py_scream_ee.new_RotamerV(*args))

    def push_back(self, x):
        return _py_scream_ee.RotamerV_push_back(self, x)

    def front(self):
        return _py_scream_ee.RotamerV_front(self)

    def back(self):
        return _py_scream_ee.RotamerV_back(self)

    def assign(self, n, x):
        return _py_scream_ee.RotamerV_assign(self, n, x)

    def resize(self, *args):
        return _py_scream_ee.RotamerV_resize(self, *args)

    def insert(self, *args):
        return _py_scream_ee.RotamerV_insert(self, *args)

    def reserve(self, n):
        return _py_scream_ee.RotamerV_reserve(self, n)

    def capacity(self):
        return _py_scream_ee.RotamerV_capacity(self)
    __swig_destroy__ = _py_scream_ee.delete_RotamerV

# Register RotamerV in _py_scream_ee:
_py_scream_ee.RotamerV_swigregister(RotamerV)
class pairds(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _py_scream_ee.pairds_swiginit(self, _py_scream_ee.new_pairds(*args))
    first = property(_py_scream_ee.pairds_first_get, _py_scream_ee.pairds_first_set)
    second = property(_py_scream_ee.pairds_second_get, _py_scream_ee.pairds_second_set)
    def __len__(self):
        return 2
    def __repr__(self):
        return str((self.first, self.second))
    def __getitem__(self, index): 
        if not (index % 2):
            return self.first
        else:
            return self.second
    def __setitem__(self, index, val):
        if not (index % 2):
            self.first = val
        else:
            self.second = val
    __swig_destroy__ = _py_scream_ee.delete_pairds

# Register pairds in _py_scream_ee:
_py_scream_ee.pairds_swigregister(pairds)
class MutInfoListPy(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        return _py_scream_ee.MutInfoListPy_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _py_scream_ee.MutInfoListPy___nonzero__(self)

    def __bool__(self):
        return _py_scream_ee.MutInfoListPy___bool__(self)

    def __len__(self):
        return _py_scream_ee.MutInfoListPy___len__(self)

    def __getslice__(self, i, j):
        return _py_scream_ee.MutInfoListPy___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _py_scream_ee.MutInfoListPy___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _py_scream_ee.MutInfoListPy___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _py_scream_ee.MutInfoListPy___delitem__(self, *args)

    def __getitem__(self, *args):
        return _py_scream_ee.MutInfoListPy___getitem__(self, *args)

    def __setitem__(self, *args):
        return _py_scream_ee.MutInfoListPy___setitem__(self, *args)

    def pop(self):
        return _py_scream_ee.MutInfoListPy_pop(self)

    def append(self, x):
        return _py_scream_ee.MutInfoListPy_append(self, x)

    def empty(self):
        return _py_scream_ee.MutInfoListPy_empty(self)

    def size(self):
        return _py_scream_ee.MutInfoListPy_size(self)

    def swap(self, v):
        return _py_scream_ee.MutInfoListPy_swap(self, v)

    def begin(self):
        return _py_scream_ee.MutInfoListPy_begin(self)

    def end(self):
        return _py_scream_ee.MutInfoListPy_end(self)

    def rbegin(self):
        return _py_scream_ee.MutInfoListPy_rbegin(self)

    def rend(self):
        return _py_scream_ee.MutInfoListPy_rend(self)

    def clear(self):
        return _py_scream_ee.MutInfoListPy_clear(self)

    def get_allocator(self):
        return _py_scream_ee.MutInfoListPy_get_allocator(self)

    def pop_back(self):
        return _py_scream_ee.MutInfoListPy_pop_back(self)

    def erase(self, *args):
        return _py_scream_ee.MutInfoListPy_erase(self, *args)

    def __init__(self, *args):
        _py_scream_ee.MutInfoListPy_swiginit(self, _py_scream_ee.new_MutInfoListPy(*args))

    def push_back(self, x):
        return _py_scream_ee.MutInfoListPy_push_back(self, x)

    def front(self):
        return _py_scream_ee.MutInfoListPy_front(self)

    def back(self):
        return _py_scream_ee.MutInfoListPy_back(self)

    def assign(self, n, x):
        return _py_scream_ee.MutInfoListPy_assign(self, n, x)

    def resize(self, *args):
        return _py_scream_ee.MutInfoListPy_resize(self, *args)

    def insert(self, *args):
        return _py_scream_ee.MutInfoListPy_insert(self, *args)

    def reserve(self, n):
        return _py_scream_ee.MutInfoListPy_reserve(self, n)

    def capacity(self):
        return _py_scream_ee.MutInfoListPy_capacity(self)
    __swig_destroy__ = _py_scream_ee.delete_MutInfoListPy

# Register MutInfoListPy in _py_scream_ee:
_py_scream_ee.MutInfoListPy_swigregister(MutInfoListPy)
class MutInfoPairListPy(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        return _py_scream_ee.MutInfoPairListPy_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _py_scream_ee.MutInfoPairListPy___nonzero__(self)

    def __bool__(self):
        return _py_scream_ee.MutInfoPairListPy___bool__(self)

    def __len__(self):
        return _py_scream_ee.MutInfoPairListPy___len__(self)

    def __getslice__(self, i, j):
        return _py_scream_ee.MutInfoPairListPy___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _py_scream_ee.MutInfoPairListPy___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _py_scream_ee.MutInfoPairListPy___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _py_scream_ee.MutInfoPairListPy___delitem__(self, *args)

    def __getitem__(self, *args):
        return _py_scream_ee.MutInfoPairListPy___getitem__(self, *args)

    def __setitem__(self, *args):
        return _py_scream_ee.MutInfoPairListPy___setitem__(self, *args)

    def pop(self):
        return _py_scream_ee.MutInfoPairListPy_pop(self)

    def append(self, x):
        return _py_scream_ee.MutInfoPairListPy_append(self, x)

    def empty(self):
        return _py_scream_ee.MutInfoPairListPy_empty(self)

    def size(self):
        return _py_scream_ee.MutInfoPairListPy_size(self)

    def swap(self, v):
        return _py_scream_ee.MutInfoPairListPy_swap(self, v)

    def begin(self):
        return _py_scream_ee.MutInfoPairListPy_begin(self)

    def end(self):
        return _py_scream_ee.MutInfoPairListPy_end(self)

    def rbegin(self):
        return _py_scream_ee.MutInfoPairListPy_rbegin(self)

    def rend(self):
        return _py_scream_ee.MutInfoPairListPy_rend(self)

    def clear(self):
        return _py_scream_ee.MutInfoPairListPy_clear(self)

    def get_allocator(self):
        return _py_scream_ee.MutInfoPairListPy_get_allocator(self)

    def pop_back(self):
        return _py_scream_ee.MutInfoPairListPy_pop_back(self)

    def erase(self, *args):
        return _py_scream_ee.MutInfoPairListPy_erase(self, *args)

    def __init__(self, *args):
        _py_scream_ee.MutInfoPairListPy_swiginit(self, _py_scream_ee.new_MutInfoPairListPy(*args))

    def push_back(self, x):
        return _py_scream_ee.MutInfoPairListPy_push_back(self, x)

    def front(self):
        return _py_scream_ee.MutInfoPairListPy_front(self)

    def back(self):
        return _py_scream_ee.MutInfoPairListPy_back(self)

    def assign(self, n, x):
        return _py_scream_ee.MutInfoPairListPy_assign(self, n, x)

    def resize(self, *args):
        return _py_scream_ee.MutInfoPairListPy_resize(self, *args)

    def insert(self, *args):
        return _py_scream_ee.MutInfoPairListPy_insert(self, *args)

    def reserve(self, n):
        return _py_scream_ee.MutInfoPairListPy_reserve(self, n)

    def capacity(self):
        return _py_scream_ee.MutInfoPairListPy_capacity(self)
    __swig_destroy__ = _py_scream_ee.delete_MutInfoPairListPy

# Register MutInfoPairListPy in _py_scream_ee:
_py_scream_ee.MutInfoPairListPy_swigregister(MutInfoPairListPy)

def derefString(str):
    return _py_scream_ee.derefString(str)

def derefRotamer(x):
    return _py_scream_ee.derefRotamer(x)

def derefAARotamer(x):
    return _py_scream_ee.derefAARotamer(x)

def castRotamerToAARotamer(x):
    return _py_scream_ee.castRotamerToAARotamer(x)

